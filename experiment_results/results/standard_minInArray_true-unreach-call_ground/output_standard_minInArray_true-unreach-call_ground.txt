pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/standard_minInArray_true-unreach-call_ground.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  int a[100000];
  int min;
  min = 0;
  int i;
  i = 0;
  while (i < 100000)
  {
    if (a[i] < min)
    {
      min = a[i];
    }

    i = i + 1;
  }

  int x;
  x = 0;
  while (x < 100000)
  {
    _1_PROVE[x] = a[x] >= min;
    x = x + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:array min:int i:int _1_PROVE:array RET:int x:int}


Output in normal notation:
1. Frame axioms:
a1 = a

2. Output equations:
i1 = (_N1+0)
x1 = (_N2+0)
d1array1(_x1,_x2) = d1array5(_x1,_x2,_N2)
main = 0
min1 = min3(_N1)

3. Other axioms:
min3((_n1+1)) = ite((d1array(a,(_n1+0))<min3(_n1)),d1array(a,(_n1+0)),min3(_n1))
min3(0) = 0
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
d1array5(_x1,_x2,(_n2+1)) = d1array5(_x1,_x2,_n2)
d1array5(_x1,_x2,0) = d1array(_x1,_x2)
(_N2>=(-(0)+100000))
(_n2<_N2) -> ((_n2+0)<100000)

4. Assumption :

5. Assertion :
(d1array5(a,(_n2+0),_N2)>=min3(_N1))

Axiomes Added

d1array5(a,_x2,_N2) = d1array5(a,_x2,_N2)
d1array5(a,_x2,_N2) = d1array(a,_x2)
VIAP_STANDARD_OUTPUT_True
