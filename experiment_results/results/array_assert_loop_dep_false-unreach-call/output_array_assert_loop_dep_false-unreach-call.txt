pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-industry-pattern/array_assert_loop_dep_false-unreach-call.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  int i;
  int a[100000];
  i = 0;
  while (i < 100000)
  {
    a[i] = 10;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    _1_PROVE[i] = a[i] == 10;
    if ((i + 1) != 15000)
    {
      a[i + 1] = 20;
    }

    i = i + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ i:int a:array _1_PROVE:array RET:int}


Output in normal notation:
1. Frame axioms:
a1 = a

2. Output equations:
i1 = (_N2+0)
d1array1(_x1,_x2) = d1array6(_x1,_x2,_N2)
main = 0

3. Other axioms:
d1array2(_x1,_x2,(_n1+1)) = ite(((_x1=a) and (_x2=(_n1+0))),10,d1array2(_x1,_x2,_n1))
d1array2(_x1,_x2,0) = d1array(_x1,_x2)
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
d1array6(_x1,_x2,(_n2+1)) = d1array6(_x1,_x2,_n2)
d1array6(_x1,_x2,0) = d1array2(_x1,_x2,_N1)
(_N2>=(-(0)+100000))
(_n2<_N2) -> ((_n2+0)<100000)

4. Assumption :

5. Assertion :
(((_n2+0)+1)!=15000) -> (d1array6(a,(_n2+0),_N2)==10)
VIAP_STANDARD_OUTPUT_False
