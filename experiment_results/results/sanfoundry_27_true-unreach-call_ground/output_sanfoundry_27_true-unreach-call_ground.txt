pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/sanfoundry_27_true-unreach-call_ground.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  int array[100000];
  int i;
  int largest;
  largest = array[0];
  i = 1;
  while (i < 100000)
  {
    if (largest < array[i])
    {
      largest = array[i];
    }

    i = i + 1;
  }

  int x;
  x = 0;
  while (x < 100000)
  {
    _1_PROVE[x] = largest >= array[x];
    x = x + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ i:int _1_PROVE:array RET:int largest:int x:int array:array}


Output in normal notation:
1. Frame axioms:
array1 = array

2. Output equations:
i1 = (_N1+1)
x1 = (_N2+0)
d1array1(_x1,_x2) = d1array5(_x1,_x2,_N2)
main = 0
largest1 = largest3(_N1)

3. Other axioms:
largest3((_n1+1)) = ite((largest3(_n1)<d1array(array,(_n1+1))),d1array(array,(_n1+1)),largest3(_n1))
largest3(0) = d1array(array,0)
(_N1>=(-(1)+100000))
(_n1<_N1) -> ((_n1+1)<100000)
d1array5(_x1,_x2,(_n2+1)) = d1array5(_x1,_x2,_n2)
d1array5(_x1,_x2,0) = d1array(_x1,_x2)
(_N2>=(-(0)+100000))
(_n2<_N2) -> ((_n2+0)<100000)

4. Assumption :

5. Assertion :
(largest3(_N1)>=d1array5(array,(_n2+0),_N2))

Axiomes Added

d1array5(array,_x2,_N2) = d1array(array,_x2)
d1array5(array,_x2,_N2) = d1array5(array,_x2,_N2)
VIAP_STANDARD_OUTPUT_True
