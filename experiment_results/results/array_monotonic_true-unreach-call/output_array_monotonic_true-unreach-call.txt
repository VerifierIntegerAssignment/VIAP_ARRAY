pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-industry-pattern/array_monotonic_true-unreach-call.i
Program Body
{
  int _1_PROVE[1000000];
  int i;
  int a[100000];
  int b[100000];
  i = 0;
  while (i < 100000)
  {
    a[i] = __VERIFIER_nondet_int();
    if (a[i] == 10)
    {
      b[i] = 20;
    }

    i = i + 2;
  }

  i = 0;
  while (i < 100000)
  {
    if (a[i] == 10)
    {
      _1_PROVE[i] = b[i] == 20;
    }

    i = i + 2;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ i:int a:array _1_PROVE:array b:array}


Output in normal notation:
1. Frame axioms:
a1 = a
b1 = b

2. Output equations:
i1 = ((2*_N2)+0)
d1array1(_x1,_x2) = d1array7(_x1,_x2,_N2)

3. Other axioms:
d1array4(_x1,_x2,(_n1+1)) = ite((ite(((a=a) and (((2*_n1)+0)=((2*_n1)+0))),__VERIFIER_nondet_int2(_n1),d1array4(a,((2*_n1)+0),_n1))==10),ite(((_x1=b) and (_x2=((2*_n1)+0))),20,ite(((_x1=a) and (_x2=((2*_n1)+0))),__VERIFIER_nondet_int2(_n1),d1array4(_x1,_x2,_n1))),ite(((_x1=a) and (_x2=((2*_n1)+0))),__VERIFIER_nondet_int2(_n1),d1array4(_x1,_x2,_n1)))
d1array4(_x1,_x2,0) = d1array(_x1,_x2)
(_N1>=((-(0)/2)+50000))
(_n1<_N1) -> (((2*_n1)+0)<100000)
d1array7(_x1,_x2,(_n2+1)) = d1array7(_x1,_x2,_n2)
d1array7(_x1,_x2,0) = d1array4(_x1,_x2,_N1)
(_N2>=((-(0)/2)+50000))
(_n2<_N2) -> (((2*_n2)+0)<100000)

4. Assumption :

5. Assertion :
(d1array7(a,((2*_n2)+0),_N2)==10) -> (d1array7(b,((2*_n2)+0),_N2)==20)

Axiomes Added

d1array7(a,((2*_n1)+0),_N2) = ite((__VERIFIER_nondet_int2(_n1)==10),__VERIFIER_nondet_int2(_n1),__VERIFIER_nondet_int2(_n1))
d1array4(b,((2*_n1)+0),_N1) = ite((__VERIFIER_nondet_int2(_n1)==10),20,d1array4(b,((2*_n1)+0),_N1))
d1array7(b,((2*_n1)+0),_N2) = ite((__VERIFIER_nondet_int2(_n1)==10),20,d1array7(b,((2*_n1)+0),_N2))
d1array7(b,((2*_n1)+0),_N2) = ite((__VERIFIER_nondet_int2(_n1)==10),20,d1array(b,((2*_n1)+0)))
d1array4(a,((2*_n1)+0),_N1) = ite((__VERIFIER_nondet_int2(_n1)==10),__VERIFIER_nondet_int2(_n1),__VERIFIER_nondet_int2(_n1))
d1array4(b,((2*_n1)+0),_N1) = ite((__VERIFIER_nondet_int2(_n1)==10),20,d1array(b,((2*_n1)+0)))
VIAP_STANDARD_OUTPUT_True
