pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/sanfoundry_24_true-unreach-call_true-termination.i
Program Body
{
  int _1_PROVE = 0;
  _1_PROVE = (i % 2) == 0;
}

Function Name:
printEven
Return Type:
void
Input Variables:
{ i:int}
Local Variables:
{ _1_PROVE:int}
Program Body
{
  int _2_PROVE = 0;
  _2_PROVE = (i % 2) != 0;
}

Function Name:
printOdd
Return Type:
void
Input Variables:
{ i:int}
Local Variables:
{ _2_PROVE:int}
Program Body
{
  int _1DUMMY;
  _1DUMMY = 0;
  int _2DUMMY;
  _2DUMMY = 0;
  int RET;
  RET = 0;
  int array[100000];
  int i;
  int num;
  num = __VERIFIER_nondet_int();
  i = 0;
  while (i < num)
  {
    if ((array[i] % 2) == 0)
    {
      _1DUMMY = printEven(array[i]);
    }

    i = i + 1;
  }

  i = 0;
  while (i < num)
  {
    if ((array[i] % 2) != 0)
    {
      _2DUMMY = printOdd(array[i]);
    }

    i = i + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ i:int RET:int _1DUMMY:int num:int _2DUMMY:int array:array}

Output in normal notation:
1. Frame axioms:
i1(i) = i

2. Output equations:

3. Other axioms:

4. Assumption :

5. Assertion :
((i%2)==0)

Output in normal notation:
1. Frame axioms:
i1(i) = i

2. Output equations:

3. Other axioms:

4. Assumption :

5. Assertion :
((i%2)!=0)

Output in normal notation:
1. Frame axioms:
array1 = array
d1array1(_x1,_x2) = d1array(_x1,_x2)

2. Output equations:
i1 = (_N2+0)
num1 = __VERIFIER_nondet_int2
_2DUMMY1 = _2DUMMY8(_N2)
main = 0
_1DUMMY1 = _1DUMMY5(_N1)

3. Other axioms:
_1DUMMY5((_n1+1)) = ite(((d1array(array,(_n1+0))%2)==0),printEven(d1array(array,(_n1+0))),_1DUMMY5(_n1))
_1DUMMY5(0) = 0
(_N1>=(-(0)+__VERIFIER_nondet_int2))
(_n1<_N1) -> ((_n1+0)<__VERIFIER_nondet_int2)
_2DUMMY8((_n2+1)) = ite(((d1array(array,(_n2+0))%2)!=0),printOdd(d1array(array,(_n2+0))),_2DUMMY8(_n2))
_2DUMMY8(0) = 0
(_N2>=(-(0)+__VERIFIER_nondet_int2))
(_n2<_N2) -> ((_n2+0)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :

Axiomes Added


Axiomes Added

VIAP_STANDARD_OUTPUT_True
