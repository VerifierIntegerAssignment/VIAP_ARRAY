pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/standard_allDiff2_false-unreach-call_ground.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[100000][100000];
  int a[100000];
  int i;
  int r;
  r = 1;
  int j;
  i = 1;
  while ((i < 100000) && (r > 0))
  {
    j = i - 1;
    while ((j >= 0) && (r > 0))
    {
      if (a[i] == a[j])
      {
        r = 1;
      }

      j = j - 1;
    }

    i = i + 1;
  }

  int x;
  int y;
  if (r > 0)
  {
    x = 0;
    while (x < 100000)
    {
      y = x + 1;
      while (y < 100000)
      {
        _1_PROVE[y][x] = a[x] != a[y];
        y = y + 1;
      }

      x = x + 1;
    }

  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:array j:int i:int _1_PROVE:array RET:int r:int y:int x:int}


Output in normal notation:
1. Frame axioms:
a1 = a
d1array1(_x1,_x2) = d1array(_x1,_x2)

2. Output equations:
i1 = (_N2+1)
j1 = j6(_N2)
main = 0
r1 = r6(_N2)
d2array1(_x1,_x2,_x3) = ite((r6(_N2)>0),d2array11(_x1,_x2,_x3,_N4),d2array(_x1,_x2,_x3))
y1 = ite((r6(_N2)>0),y11(_N4),y)
x1 = ite((r6(_N2)>0),(_N4+0),x)

3. Other axioms:
r3((_n1+1),_n2) = ite((d1array(a,(_n2+1))==d1array(a,(-(_n1)+((_n2+1)-1)))),1,r3(_n1,_n2))
r3(0,_n2) = r6(_n2)
(((-(_N1(_n2))+((_n2+1)-1))<0) or (r3(_N1(_n2),_n2)<=0))
(_n1<_N1(_n2)) -> (((-(_n1)+((_n2+1)-1))>=0) and (r3(_n1,_n2)>0))
r6((_n2+1)) = r3(_N1(_n2),_n2)
j6((_n2+1)) = (-(_N1(_n2))+((_n2+1)-1))
r6(0) = 1
j6(0) = j
(((_N2+1)>=100000) or (r6(_N2)<=0))
(_n2<_N2) -> (((_n2+1)<100000) and (r6(_n2)>0))
d2array8(_x1,_x2,_x3,(_n3+1),_n4) = d2array8(_x1,_x2,_x3,_n3,_n4)
d2array8(_x1,_x2,_x3,0,_n4) = d2array11(_x1,_x2,_x3,_n4)
(_N3(_n4)>=(-(((_n4+0)+1))+100000))
(_n3<_N3(_n4)) -> ((_n3+((_n4+0)+1))<100000)
y11((_n4+1)) = (_N3(_n4)+((_n4+0)+1))
d2array11(_x1,_x2,_x3,(_n4+1)) = d2array8(_x1,_x2,_x3,_N3(_n4),_n4)
y11(0) = y
d2array11(_x1,_x2,_x3,0) = d2array(_x1,_x2,_x3)
(_N4>=(-(0)+100000))
(_n4<_N4) -> ((_n4+0)<100000)

4. Assumption :

5. Assertion :
(r6(_N2)>0) -> (d1array(a,(_n4+0))!=d1array(a,(_n3+((_n4+0)+1))))
VIAP_STANDARD_OUTPUT_False
