pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/standard_password_true-unreach-call_ground.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  int password[100000];
  int guess[100000];
  int i;
  int result;
  result = 1;
  i = 0;
  while (i < 100000)
  {
    if (password[i] != guess[i])
    {
      result = 0;
    }

    i = i + 1;
  }

  if (result > 0)
  {
    int x;
    x = 0;
    while (x < 100000)
    {
      _1_PROVE[x] = password[x] == guess[x];
      x = x + 1;
    }

  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ guess:array i:int _1_PROVE:array RET:int result:int x:int password:array}


Output in normal notation:
1. Frame axioms:
guess1 = guess
password1 = password

2. Output equations:
i1 = (_N1+0)
x1 = ite((result3(_N1)>0),(_N2+0),x)
d1array1(_x1,_x2) = ite((result3(_N1)>0),d1array5(_x1,_x2,_N2),d1array(_x1,_x2))
result1 = result3(_N1)
main = 0

3. Other axioms:
result3((_n1+1)) = ite((d1array(password,(_n1+0))!=d1array(guess,(_n1+0))),0,result3(_n1))
result3(0) = 1
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
d1array5(_x1,_x2,(_n2+1)) = d1array5(_x1,_x2,_n2)
d1array5(_x1,_x2,0) = d1array(_x1,_x2)
(_N2>=(-(0)+100000))
(_n2<_N2) -> ((_n2+0)<100000)

4. Assumption :

5. Assertion :
(result3(_N1)>0) -> (d1array5(password,(_n2+0),_N2)==d1array5(guess,(_n2+0),_N2))

Axiomes Added

d1array5(password,_x2,_N2) = d1array5(password,_x2,_N2)
d1array5(password,_x2,_N2) = d1array(password,_x2)
d1array5(guess,_x2,_N2) = d1array5(guess,_x2,_N2)
d1array5(guess,_x2,_N2) = d1array(guess,_x2)
VIAP_STANDARD_OUTPUT_True
