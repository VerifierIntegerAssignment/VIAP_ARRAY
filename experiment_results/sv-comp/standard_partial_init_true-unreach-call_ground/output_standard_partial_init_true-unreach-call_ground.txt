pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/standard_partial_init_true-unreach-call_ground.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  int _2_PROVE[1000000];
  int A[100000];
  int B[100000];
  int C[100000];
  int i;
  int j;
  j = 0;
  i = 0;
  while (i < 100000)
  {
    if (A[i] == B[i])
    {
      C[j] = i;
      j = j + 1;
    }

    i = i + 1;
  }

  int x;
  x = 0;
  while (x < j)
  {
    _1_PROVE[x] = C[x] <= ((x + i) - j);
    x = x + 1;
  }

  x = 0;
  while (x < j)
  {
    _2_PROVE[x] = C[x] >= x;
    x = x + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:array C:array B:array i:int _1_PROVE:array RET:int j:int x:int _2_PROVE:array}



Output in normal notation:
1. Frame axioms:
A1 = A
C1 = C
B1 = B

2. Output equations:
i1 = (_N1+0)
x1 = (_N3+0)
d1array1(_x1,_x2) = d1array8(_x1,_x2,_N3)
main = 0
j1 = j4(_N1)

3. Other axioms:
d1array4(_x1,_x2,(_n1+1)) = ite((d1array4(A,(_n1+0),_n1)==d1array4(B,(_n1+0),_n1)),ite(((_x1=C) and (_x2=j4(_n1))),(_n1+0),d1array4(_x1,_x2,_n1)),d1array4(_x1,_x2,_n1))
j4((_n1+1)) = ite((d1array4(A,(_n1+0),_n1)==d1array4(B,(_n1+0),_n1)),(j4(_n1)+1),j4(_n1))
d1array4(_x1,_x2,0) = d1array(_x1,_x2)
j4(0) = 0
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
d1array6(_x1,_x2,(_n2+1)) = d1array6(_x1,_x2,_n2)
d1array6(_x1,_x2,0) = d1array4(_x1,_x2,_N1)
(_N2>=(j4(_N1)-0))
(_n2<_N2) -> ((_n2+0)<j4(_N1))
d1array8(_x1,_x2,(_n3+1)) = d1array8(_x1,_x2,_n3)
d1array8(_x1,_x2,0) = d1array6(_x1,_x2,_N2)
(_N3>=(j4(_N1)-0))
(_n3<_N3) -> ((_n3+0)<j4(_N1))

4. Assumption :

5. Assertion :
(d1array6(C,(_n2+0),_N2)<=(((_n2+0)+(_N1+0))-j4(_N1)))
(d1array8(C,(_n3+0),_N3)>=(_n3+0))

Axiomes Added

d1array4(C,j4(_n1),_N1) = ite((d1array4(A,(_n1+0),_N1)==d1array4(B,(_n1+0),_N1)),(_n1+0),d1array4(C,j4(_n1),_N1))
d1array6(C,j4(_n1),_N2) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array(C,j4(_n1)))
d1array8(A,_x2,_N3) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(A,_x2),d1array(A,_x2))
d1array4(B,_x2,_N1) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(B,_x2),d1array(B,_x2))
d1array6(A,_x2,_N2) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(A,_x2),d1array(A,_x2))
d1array4(B,_x2,_N1) = ite((d1array4(A,(_n1+0),_N1)==d1array4(B,(_n1+0),_N1)),d1array4(B,_x2,_N1),d1array4(B,_x2,_N1))
d1array8(B,_x2,_N3) = ite((d1array8(A,(_n1+0),_N3)==d1array8(B,(_n1+0),_N3)),d1array8(B,_x2,_N3),d1array8(B,_x2,_N3))
d1array6(C,j4(_n1),_N2) = ite((d1array6(A,(_n1+0),_N2)==d1array6(B,(_n1+0),_N2)),(_n1+0),d1array6(C,j4(_n1),_N2))
d1array4(C,j4(_n1),_N1) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array(C,j4(_n1)))
d1array8(C,j4(_n1),_N3) = ite((d1array8(A,(_n1+0),_N3)==d1array8(B,(_n1+0),_N3)),(_n1+0),d1array8(C,j4(_n1),_N3))
d1array8(C,j4(_n1),_N3) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array(C,j4(_n1)))
d1array6(B,_x2,_N2) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(B,_x2),d1array(B,_x2))
d1array6(B,_x2,_N2) = ite((d1array6(A,(_n1+0),_N2)==d1array6(B,(_n1+0),_N2)),d1array6(B,_x2,_N2),d1array6(B,_x2,_N2))
d1array6(A,_x2,_N2) = ite((d1array6(A,(_n1+0),_N2)==d1array6(B,(_n1+0),_N2)),d1array6(A,_x2,_N2),d1array6(A,_x2,_N2))
d1array4(A,_x2,_N1) = ite((d1array4(A,(_n1+0),_N1)==d1array4(B,(_n1+0),_N1)),d1array4(A,_x2,_N1),d1array4(A,_x2,_N1))
d1array8(B,_x2,_N3) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(B,_x2),d1array(B,_x2))
d1array4(A,_x2,_N1) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(A,_x2),d1array(A,_x2))
d1array8(A,_x2,_N3) = ite((d1array8(A,(_n1+0),_N3)==d1array8(B,(_n1+0),_N3)),d1array8(A,_x2,_N3),d1array8(A,_x2,_N3))
d1array4(C,j4(_n1),(_n1+1)) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array4(C,j4(_n1),_n1))
j4((_n1+1)) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(j4(_n1)+1),j4(_n1))
d1array4(C,_x2,0) = d1array(C,_x2)
j4(0) = 0
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
(_N2>=(j4(_N1)-0))
(_n2<_N2) -> ((_n2+0)<j4(_N1))
(_N3>=(j4(_N1)-0))
(_n3<_N3) -> ((_n3+0)<j4(_N1))

Axiomes Added

d1array4(C,j4(_n1),_N1) = ite((d1array4(A,(_n1+0),_N1)==d1array4(B,(_n1+0),_N1)),(_n1+0),d1array4(C,j4(_n1),_N1))
d1array6(C,j4(_n1),_N2) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array(C,j4(_n1)))
d1array8(A,_x2,_N3) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(A,_x2),d1array(A,_x2))
d1array4(B,_x2,_N1) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(B,_x2),d1array(B,_x2))
d1array6(A,_x2,_N2) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(A,_x2),d1array(A,_x2))
d1array4(B,_x2,_N1) = ite((d1array4(A,(_n1+0),_N1)==d1array4(B,(_n1+0),_N1)),d1array4(B,_x2,_N1),d1array4(B,_x2,_N1))
d1array8(B,_x2,_N3) = ite((d1array8(A,(_n1+0),_N3)==d1array8(B,(_n1+0),_N3)),d1array8(B,_x2,_N3),d1array8(B,_x2,_N3))
d1array6(C,j4(_n1),_N2) = ite((d1array6(A,(_n1+0),_N2)==d1array6(B,(_n1+0),_N2)),(_n1+0),d1array6(C,j4(_n1),_N2))
d1array4(C,j4(_n1),_N1) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array(C,j4(_n1)))
d1array8(C,j4(_n1),_N3) = ite((d1array8(A,(_n1+0),_N3)==d1array8(B,(_n1+0),_N3)),(_n1+0),d1array8(C,j4(_n1),_N3))
d1array8(C,j4(_n1),_N3) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array(C,j4(_n1)))
d1array6(B,_x2,_N2) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(B,_x2),d1array(B,_x2))
d1array6(B,_x2,_N2) = ite((d1array6(A,(_n1+0),_N2)==d1array6(B,(_n1+0),_N2)),d1array6(B,_x2,_N2),d1array6(B,_x2,_N2))
d1array6(A,_x2,_N2) = ite((d1array6(A,(_n1+0),_N2)==d1array6(B,(_n1+0),_N2)),d1array6(A,_x2,_N2),d1array6(A,_x2,_N2))
d1array4(A,_x2,_N1) = ite((d1array4(A,(_n1+0),_N1)==d1array4(B,(_n1+0),_N1)),d1array4(A,_x2,_N1),d1array4(A,_x2,_N1))
d1array8(B,_x2,_N3) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(B,_x2),d1array(B,_x2))
d1array4(A,_x2,_N1) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),d1array(A,_x2),d1array(A,_x2))
d1array8(A,_x2,_N3) = ite((d1array8(A,(_n1+0),_N3)==d1array8(B,(_n1+0),_N3)),d1array8(A,_x2,_N3),d1array8(A,_x2,_N3))
d1array4(C,j4(_n1),(_n1+1)) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(_n1+0),d1array4(C,j4(_n1),_n1))
j4((_n1+1)) = ite((d1array(A,(_n1+0))==d1array(B,(_n1+0))),(j4(_n1)+1),j4(_n1))
d1array4(C,_x2,0) = d1array(C,_x2)
j4(0) = 0
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
(_N2>=(j4(_N1)-0))
(_n2<_N2) -> ((_n2+0)<j4(_N1))
(_N3>=(j4(_N1)-0))
(_n3<_N3) -> ((_n3+0)<j4(_N1))
VIAP_STANDARD_OUTPUT_True
