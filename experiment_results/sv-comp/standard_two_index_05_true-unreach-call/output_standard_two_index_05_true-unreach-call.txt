pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp array-examples/standard_two_index_05_true-unreach-call.i
Program Body
{
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  int a[100000];
  int b[100000];
  int i;
  i = 0;
  int j;
  j = 0;
  while (i < 100000)
  {
    b[i] = __VERIFIER_nondet_int();
    i = i + 1;
  }

  i = 1;
  while (i < 100000)
  {
    a[j] = b[i];
    i = i + 5;
    j = j + 1;
  }

  i = 1;
  j = 0;
  while (i < 100000)
  {
    _1_PROVE[i] = a[j] == b[(5 * j) + 1];
    i = i + 5;
    j = j + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:array b:array i:int _1_PROVE:array RET:int j:int}


Output in normal notation:
1. Frame axioms:
a1 = a
b1 = b

2. Output equations:
i1 = ((5*_N3)+1)
d1array1(_x1,_x2) = d1array8(_x1,_x2,_N3)
main = 0
j1 = (_N3+0)

3. Other axioms:
d1array2(_x1,_x2,(_n1+1)) = ite(((_x1=b) and (_x2=(_n1+0))),__VERIFIER_nondet_int2(_n1),d1array2(_x1,_x2,_n1))
d1array2(_x1,_x2,0) = d1array(_x1,_x2)
(_N1>=(-(0)+100000))
(_n1<_N1) -> ((_n1+0)<100000)
d1array5(_x1,_x2,(_n2+1)) = ite(((_x1=a) and (_x2=(_n2+0))),d1array5(b,((5*_n2)+1),_n2),d1array5(_x1,_x2,_n2))
d1array5(_x1,_x2,0) = d1array2(_x1,_x2,_N1)
(_N2>=((-(1)/5)+20000))
(_n2<_N2) -> (((5*_n2)+1)<100000)
d1array8(_x1,_x2,(_n3+1)) = d1array8(_x1,_x2,_n3)
d1array8(_x1,_x2,0) = d1array5(_x1,_x2,_N2)
(_N3>=((-(1)/5)+20000))
(_n3<_N3) -> (((5*_n3)+1)<100000)

4. Assumption :

5. Assertion :
(d1array8(a,(_n3+0),_N3)==d1array8(b,((5*(_n3+0))+1),_N3))

Axiomes Added

d1array5(a,(_n2+0),_N2) = __VERIFIER_nondet_int2(_n1)
d1array2(b,(_n1+0),_N1) = __VERIFIER_nondet_int2(_n1)
d1array2(a,_x2,_N1) = d1array(a,_x2)
d1array2(a,_x2,_N1) = d1array2(a,_x2,_N1)
d1array8(b,(_n1+0),_N3) = __VERIFIER_nondet_int2(_n1)
d1array5(b,(_n1+0),_N2) = __VERIFIER_nondet_int2(_n1)
d1array8(a,(_n2+0),_N3) = __VERIFIER_nondet_int2(_n1)
1
VIAP_STANDARD_OUTPUT_True

