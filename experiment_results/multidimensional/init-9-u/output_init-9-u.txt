pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp multidimensional/init-9-u.c
Program Body
{
  int _1_PROVE[1000000][1000000][1000000][1000000][1000000][1000000][1000000][1000000][1000000];
  int i;
  int j;
  int k;
  int l;
  int m;
  int t;
  int o;
  int p;
  int q;
  int Size;
  int A[Size][Size][Size][Size][Size][Size][Size][Size][Size];
  int C;
  i = 0;
  j = 0;
  k = 0;
  l = 0;
  m = 0;
  t = 0;
  o = 0;
  p = 0;
  q = 0;
  while (i < Size)
  {
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    t = 0;
    o = 0;
    p = 0;
    q = 0;
    while (j < Size)
    {
      k = 0;
      l = 0;
      m = 0;
      t = 0;
      o = 0;
      p = 0;
      q = 0;
      while (k < Size)
      {
        l = 0;
        m = 0;
        t = 0;
        o = 0;
        p = 0;
        q = 0;
        while (l < Size)
        {
          m = 0;
          t = 0;
          o = 0;
          p = 0;
          q = 0;
          while (m < Size)
          {
            t = 0;
            o = 0;
            p = 0;
            q = 0;
            while (t < Size)
            {
              o = 0;
              p = 0;
              q = 0;
              while (o < Size)
              {
                p = 0;
                q = 0;
                while (p < Size)
                {
                  q = 0;
                  while (q < Size)
                  {
                    A[i][j][k][l][m][t][o][p][q] = C;
                    q = q + 1;
                  }

                  p = p + 1;
                }

                o = o + 1;
              }

              t = t + 1;
            }

            m = m + 1;
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

  i = 0;
  j = 0;
  k = 0;
  l = 0;
  m = 0;
  t = 0;
  o = 0;
  p = 0;
  q = 0;
  while (i < Size)
  {
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    t = 0;
    o = 0;
    p = 0;
    q = 0;
    while (j < Size)
    {
      k = 0;
      l = 0;
      m = 0;
      t = 0;
      o = 0;
      p = 0;
      q = 0;
      while (k < Size)
      {
        l = 0;
        m = 0;
        t = 0;
        o = 0;
        p = 0;
        q = 0;
        while (l < Size)
        {
          m = 0;
          t = 0;
          o = 0;
          p = 0;
          q = 0;
          while (m < Size)
          {
            t = 0;
            o = 0;
            p = 0;
            q = 0;
            while (t < Size)
            {
              o = 0;
              p = 0;
              q = 0;
              while (o < Size)
              {
                p = 0;
                q = 0;
                while (p < Size)
                {
                  q = 0;
                  while (q < Size)
                  {
                    _1_PROVE[i][k][j][m][l][o][q][p][t] = A[i][j][k][l][m][t][o][p][q] == C;
                    q = q + 1;
                  }

                  p = p + 1;
                }

                o = o + 1;
              }

              t = t + 1;
            }

            m = m + 1;
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:array C:int j:int i:int k:int _1_PROVE:array m:int l:int o:int q:int p:int t:int Size:int}


Output in normal notation:
1. Frame axioms:
A1 = A
C1 = C
Size1 = Size

2. Output equations:
d9array1(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10) = d9array108(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N18)
i1 = (_N18+0)
k1 = k108(_N18)
j1 = j108(_N18)
m1 = m108(_N18)
l1 = l108(_N18)
o1 = o108(_N18)
q1 = q108(_N18)
p1 = p108(_N18)
t1 = t108(_N18)

3. Other axioms:
d9array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n1+1),_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9) = ite(((_x1=A) and (_x2=(_n9+0)) and (_x3=(_n8+0)) and (_x4=(_n7+0)) and (_x5=(_n6+0)) and (_x6=(_n5+0)) and (_x7=(_n4+0)) and (_x8=(_n3+0)) and (_x9=(_n2+0)) and (_x10=(_n1+0))),C,d9array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n1,_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9))
d9array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9) = d9array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9)
(_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9)>=(Size-0))
(_n1<_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9)) -> ((_n1+0)<Size)
q5((_n2+1),_n3,_n4,_n5,_n6,_n7,_n8,_n9) = (_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9)+0)
d9array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n2+1),_n3,_n4,_n5,_n6,_n7,_n8,_n9) = d9array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9),_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9)
q5(0,_n3,_n4,_n5,_n6,_n7,_n8,_n9) = 0
d9array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n3,_n4,_n5,_n6,_n7,_n8,_n9) = d9array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n3,_n4,_n5,_n6,_n7,_n8,_n9)
(_N2(_n3,_n4,_n5,_n6,_n7,_n8,_n9)>=(Size-0))
(_n2<_N2(_n3,_n4,_n5,_n6,_n7,_n8,_n9)) -> ((_n2+0)<Size)
q9((_n3+1),_n4,_n5,_n6,_n7,_n8,_n9) = q5(_N2(_n3,_n4,_n5,_n6,_n7,_n8,_n9),_n3,_n4,_n5,_n6,_n7,_n8,_n9)
p9((_n3+1),_n4,_n5,_n6,_n7,_n8,_n9) = (_N2(_n3,_n4,_n5,_n6,_n7,_n8,_n9)+0)
d9array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n3+1),_n4,_n5,_n6,_n7,_n8,_n9) = d9array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N2(_n3,_n4,_n5,_n6,_n7,_n8,_n9),_n3,_n4,_n5,_n6,_n7,_n8,_n9)
q9(0,_n4,_n5,_n6,_n7,_n8,_n9) = 0
p9(0,_n4,_n5,_n6,_n7,_n8,_n9) = 0
d9array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n4,_n5,_n6,_n7,_n8,_n9) = d9array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n4,_n5,_n6,_n7,_n8,_n9)
(_N3(_n4,_n5,_n6,_n7,_n8,_n9)>=(Size-0))
(_n3<_N3(_n4,_n5,_n6,_n7,_n8,_n9)) -> ((_n3+0)<Size)
q14((_n4+1),_n5,_n6,_n7,_n8,_n9) = q9(_N3(_n4,_n5,_n6,_n7,_n8,_n9),_n4,_n5,_n6,_n7,_n8,_n9)
p14((_n4+1),_n5,_n6,_n7,_n8,_n9) = p9(_N3(_n4,_n5,_n6,_n7,_n8,_n9),_n4,_n5,_n6,_n7,_n8,_n9)
d9array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n4+1),_n5,_n6,_n7,_n8,_n9) = d9array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N3(_n4,_n5,_n6,_n7,_n8,_n9),_n4,_n5,_n6,_n7,_n8,_n9)
o14((_n4+1),_n5,_n6,_n7,_n8,_n9) = (_N3(_n4,_n5,_n6,_n7,_n8,_n9)+0)
q14(0,_n5,_n6,_n7,_n8,_n9) = 0
p14(0,_n5,_n6,_n7,_n8,_n9) = 0
d9array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n5,_n6,_n7,_n8,_n9) = d9array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n5,_n6,_n7,_n8,_n9)
o14(0,_n5,_n6,_n7,_n8,_n9) = 0
(_N4(_n5,_n6,_n7,_n8,_n9)>=(Size-0))
(_n4<_N4(_n5,_n6,_n7,_n8,_n9)) -> ((_n4+0)<Size)
d9array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n5+1),_n6,_n7,_n8,_n9) = d9array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N4(_n5,_n6,_n7,_n8,_n9),_n5,_n6,_n7,_n8,_n9)
o20((_n5+1),_n6,_n7,_n8,_n9) = o14(_N4(_n5,_n6,_n7,_n8,_n9),_n5,_n6,_n7,_n8,_n9)
q20((_n5+1),_n6,_n7,_n8,_n9) = q14(_N4(_n5,_n6,_n7,_n8,_n9),_n5,_n6,_n7,_n8,_n9)
p20((_n5+1),_n6,_n7,_n8,_n9) = p14(_N4(_n5,_n6,_n7,_n8,_n9),_n5,_n6,_n7,_n8,_n9)
t20((_n5+1),_n6,_n7,_n8,_n9) = (_N4(_n5,_n6,_n7,_n8,_n9)+0)
d9array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n6,_n7,_n8,_n9) = d9array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n6,_n7,_n8,_n9)
o20(0,_n6,_n7,_n8,_n9) = 0
q20(0,_n6,_n7,_n8,_n9) = 0
p20(0,_n6,_n7,_n8,_n9) = 0
t20(0,_n6,_n7,_n8,_n9) = 0
(_N5(_n6,_n7,_n8,_n9)>=(Size-0))
(_n5<_N5(_n6,_n7,_n8,_n9)) -> ((_n5+0)<Size)
d9array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n6+1),_n7,_n8,_n9) = d9array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N5(_n6,_n7,_n8,_n9),_n6,_n7,_n8,_n9)
m27((_n6+1),_n7,_n8,_n9) = (_N5(_n6,_n7,_n8,_n9)+0)
o27((_n6+1),_n7,_n8,_n9) = o20(_N5(_n6,_n7,_n8,_n9),_n6,_n7,_n8,_n9)
q27((_n6+1),_n7,_n8,_n9) = q20(_N5(_n6,_n7,_n8,_n9),_n6,_n7,_n8,_n9)
p27((_n6+1),_n7,_n8,_n9) = p20(_N5(_n6,_n7,_n8,_n9),_n6,_n7,_n8,_n9)
t27((_n6+1),_n7,_n8,_n9) = t20(_N5(_n6,_n7,_n8,_n9),_n6,_n7,_n8,_n9)
d9array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n7,_n8,_n9) = d9array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n7,_n8,_n9)
m27(0,_n7,_n8,_n9) = 0
o27(0,_n7,_n8,_n9) = 0
q27(0,_n7,_n8,_n9) = 0
p27(0,_n7,_n8,_n9) = 0
t27(0,_n7,_n8,_n9) = 0
(_N6(_n7,_n8,_n9)>=(Size-0))
(_n6<_N6(_n7,_n8,_n9)) -> ((_n6+0)<Size)
d9array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n7+1),_n8,_n9) = d9array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N6(_n7,_n8,_n9),_n7,_n8,_n9)
m35((_n7+1),_n8,_n9) = m27(_N6(_n7,_n8,_n9),_n7,_n8,_n9)
l35((_n7+1),_n8,_n9) = (_N6(_n7,_n8,_n9)+0)
o35((_n7+1),_n8,_n9) = o27(_N6(_n7,_n8,_n9),_n7,_n8,_n9)
q35((_n7+1),_n8,_n9) = q27(_N6(_n7,_n8,_n9),_n7,_n8,_n9)
p35((_n7+1),_n8,_n9) = p27(_N6(_n7,_n8,_n9),_n7,_n8,_n9)
t35((_n7+1),_n8,_n9) = t27(_N6(_n7,_n8,_n9),_n7,_n8,_n9)
d9array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n8,_n9) = d9array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n8,_n9)
m35(0,_n8,_n9) = 0
l35(0,_n8,_n9) = 0
o35(0,_n8,_n9) = 0
q35(0,_n8,_n9) = 0
p35(0,_n8,_n9) = 0
t35(0,_n8,_n9) = 0
(_N7(_n8,_n9)>=(Size-0))
(_n7<_N7(_n8,_n9)) -> ((_n7+0)<Size)
d9array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n8+1),_n9) = d9array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N7(_n8,_n9),_n8,_n9)
k44((_n8+1),_n9) = (_N7(_n8,_n9)+0)
m44((_n8+1),_n9) = m35(_N7(_n8,_n9),_n8,_n9)
l44((_n8+1),_n9) = l35(_N7(_n8,_n9),_n8,_n9)
o44((_n8+1),_n9) = o35(_N7(_n8,_n9),_n8,_n9)
q44((_n8+1),_n9) = q35(_N7(_n8,_n9),_n8,_n9)
p44((_n8+1),_n9) = p35(_N7(_n8,_n9),_n8,_n9)
t44((_n8+1),_n9) = t35(_N7(_n8,_n9),_n8,_n9)
d9array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n9) = d9array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n9)
k44(0,_n9) = 0
m44(0,_n9) = 0
l44(0,_n9) = 0
o44(0,_n9) = 0
q44(0,_n9) = 0
p44(0,_n9) = 0
t44(0,_n9) = 0
(_N8(_n9)>=(Size-0))
(_n8<_N8(_n9)) -> ((_n8+0)<Size)
d9array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n9+1)) = d9array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N8(_n9),_n9)
k54((_n9+1)) = k44(_N8(_n9),_n9)
j54((_n9+1)) = (_N8(_n9)+0)
m54((_n9+1)) = m44(_N8(_n9),_n9)
l54((_n9+1)) = l44(_N8(_n9),_n9)
o54((_n9+1)) = o44(_N8(_n9),_n9)
q54((_n9+1)) = q44(_N8(_n9),_n9)
p54((_n9+1)) = p44(_N8(_n9),_n9)
t54((_n9+1)) = t44(_N8(_n9),_n9)
d9array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0) = d9array(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10)
k54(0) = 0
j54(0) = 0
m54(0) = 0
l54(0) = 0
o54(0) = 0
q54(0) = 0
p54(0) = 0
t54(0) = 0
(_N9>=(Size-0))
(_n9<_N9) -> ((_n9+0)<Size)
d9array56(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n10+1),_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18) = d9array56(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n10,_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18)
d9array56(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18) = d9array59(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18)
(_N10(_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18)>=(Size-0))
(_n10<_N10(_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18)) -> ((_n10+0)<Size)
q59((_n11+1),_n12,_n13,_n14,_n15,_n16,_n17,_n18) = (_N10(_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18)+0)
d9array59(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n11+1),_n12,_n13,_n14,_n15,_n16,_n17,_n18) = d9array56(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N10(_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18),_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18)
q59(0,_n12,_n13,_n14,_n15,_n16,_n17,_n18) = 0
d9array59(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n12,_n13,_n14,_n15,_n16,_n17,_n18) = d9array63(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n12,_n13,_n14,_n15,_n16,_n17,_n18)
(_N11(_n12,_n13,_n14,_n15,_n16,_n17,_n18)>=(Size-0))
(_n11<_N11(_n12,_n13,_n14,_n15,_n16,_n17,_n18)) -> ((_n11+0)<Size)
q63((_n12+1),_n13,_n14,_n15,_n16,_n17,_n18) = q59(_N11(_n12,_n13,_n14,_n15,_n16,_n17,_n18),_n12,_n13,_n14,_n15,_n16,_n17,_n18)
p63((_n12+1),_n13,_n14,_n15,_n16,_n17,_n18) = (_N11(_n12,_n13,_n14,_n15,_n16,_n17,_n18)+0)
d9array63(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n12+1),_n13,_n14,_n15,_n16,_n17,_n18) = d9array59(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N11(_n12,_n13,_n14,_n15,_n16,_n17,_n18),_n12,_n13,_n14,_n15,_n16,_n17,_n18)
q63(0,_n13,_n14,_n15,_n16,_n17,_n18) = 0
p63(0,_n13,_n14,_n15,_n16,_n17,_n18) = 0
d9array63(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n13,_n14,_n15,_n16,_n17,_n18) = d9array68(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n13,_n14,_n15,_n16,_n17,_n18)
(_N12(_n13,_n14,_n15,_n16,_n17,_n18)>=(Size-0))
(_n12<_N12(_n13,_n14,_n15,_n16,_n17,_n18)) -> ((_n12+0)<Size)
q68((_n13+1),_n14,_n15,_n16,_n17,_n18) = q63(_N12(_n13,_n14,_n15,_n16,_n17,_n18),_n13,_n14,_n15,_n16,_n17,_n18)
p68((_n13+1),_n14,_n15,_n16,_n17,_n18) = p63(_N12(_n13,_n14,_n15,_n16,_n17,_n18),_n13,_n14,_n15,_n16,_n17,_n18)
d9array68(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n13+1),_n14,_n15,_n16,_n17,_n18) = d9array63(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N12(_n13,_n14,_n15,_n16,_n17,_n18),_n13,_n14,_n15,_n16,_n17,_n18)
o68((_n13+1),_n14,_n15,_n16,_n17,_n18) = (_N12(_n13,_n14,_n15,_n16,_n17,_n18)+0)
q68(0,_n14,_n15,_n16,_n17,_n18) = 0
p68(0,_n14,_n15,_n16,_n17,_n18) = 0
d9array68(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n14,_n15,_n16,_n17,_n18) = d9array74(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n14,_n15,_n16,_n17,_n18)
o68(0,_n14,_n15,_n16,_n17,_n18) = 0
(_N13(_n14,_n15,_n16,_n17,_n18)>=(Size-0))
(_n13<_N13(_n14,_n15,_n16,_n17,_n18)) -> ((_n13+0)<Size)
d9array74(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n14+1),_n15,_n16,_n17,_n18) = d9array68(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N13(_n14,_n15,_n16,_n17,_n18),_n14,_n15,_n16,_n17,_n18)
o74((_n14+1),_n15,_n16,_n17,_n18) = o68(_N13(_n14,_n15,_n16,_n17,_n18),_n14,_n15,_n16,_n17,_n18)
q74((_n14+1),_n15,_n16,_n17,_n18) = q68(_N13(_n14,_n15,_n16,_n17,_n18),_n14,_n15,_n16,_n17,_n18)
p74((_n14+1),_n15,_n16,_n17,_n18) = p68(_N13(_n14,_n15,_n16,_n17,_n18),_n14,_n15,_n16,_n17,_n18)
t74((_n14+1),_n15,_n16,_n17,_n18) = (_N13(_n14,_n15,_n16,_n17,_n18)+0)
d9array74(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n15,_n16,_n17,_n18) = d9array81(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n15,_n16,_n17,_n18)
o74(0,_n15,_n16,_n17,_n18) = 0
q74(0,_n15,_n16,_n17,_n18) = 0
p74(0,_n15,_n16,_n17,_n18) = 0
t74(0,_n15,_n16,_n17,_n18) = 0
(_N14(_n15,_n16,_n17,_n18)>=(Size-0))
(_n14<_N14(_n15,_n16,_n17,_n18)) -> ((_n14+0)<Size)
d9array81(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n15+1),_n16,_n17,_n18) = d9array74(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N14(_n15,_n16,_n17,_n18),_n15,_n16,_n17,_n18)
m81((_n15+1),_n16,_n17,_n18) = (_N14(_n15,_n16,_n17,_n18)+0)
o81((_n15+1),_n16,_n17,_n18) = o74(_N14(_n15,_n16,_n17,_n18),_n15,_n16,_n17,_n18)
q81((_n15+1),_n16,_n17,_n18) = q74(_N14(_n15,_n16,_n17,_n18),_n15,_n16,_n17,_n18)
p81((_n15+1),_n16,_n17,_n18) = p74(_N14(_n15,_n16,_n17,_n18),_n15,_n16,_n17,_n18)
t81((_n15+1),_n16,_n17,_n18) = t74(_N14(_n15,_n16,_n17,_n18),_n15,_n16,_n17,_n18)
d9array81(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n16,_n17,_n18) = d9array89(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n16,_n17,_n18)
m81(0,_n16,_n17,_n18) = 0
o81(0,_n16,_n17,_n18) = 0
q81(0,_n16,_n17,_n18) = 0
p81(0,_n16,_n17,_n18) = 0
t81(0,_n16,_n17,_n18) = 0
(_N15(_n16,_n17,_n18)>=(Size-0))
(_n15<_N15(_n16,_n17,_n18)) -> ((_n15+0)<Size)
d9array89(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n16+1),_n17,_n18) = d9array81(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N15(_n16,_n17,_n18),_n16,_n17,_n18)
m89((_n16+1),_n17,_n18) = m81(_N15(_n16,_n17,_n18),_n16,_n17,_n18)
l89((_n16+1),_n17,_n18) = (_N15(_n16,_n17,_n18)+0)
o89((_n16+1),_n17,_n18) = o81(_N15(_n16,_n17,_n18),_n16,_n17,_n18)
q89((_n16+1),_n17,_n18) = q81(_N15(_n16,_n17,_n18),_n16,_n17,_n18)
p89((_n16+1),_n17,_n18) = p81(_N15(_n16,_n17,_n18),_n16,_n17,_n18)
t89((_n16+1),_n17,_n18) = t81(_N15(_n16,_n17,_n18),_n16,_n17,_n18)
d9array89(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n17,_n18) = d9array98(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n17,_n18)
m89(0,_n17,_n18) = 0
l89(0,_n17,_n18) = 0
o89(0,_n17,_n18) = 0
q89(0,_n17,_n18) = 0
p89(0,_n17,_n18) = 0
t89(0,_n17,_n18) = 0
(_N16(_n17,_n18)>=(Size-0))
(_n16<_N16(_n17,_n18)) -> ((_n16+0)<Size)
d9array98(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n17+1),_n18) = d9array89(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N16(_n17,_n18),_n17,_n18)
k98((_n17+1),_n18) = (_N16(_n17,_n18)+0)
m98((_n17+1),_n18) = m89(_N16(_n17,_n18),_n17,_n18)
l98((_n17+1),_n18) = l89(_N16(_n17,_n18),_n17,_n18)
o98((_n17+1),_n18) = o89(_N16(_n17,_n18),_n17,_n18)
q98((_n17+1),_n18) = q89(_N16(_n17,_n18),_n17,_n18)
p98((_n17+1),_n18) = p89(_N16(_n17,_n18),_n17,_n18)
t98((_n17+1),_n18) = t89(_N16(_n17,_n18),_n17,_n18)
d9array98(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0,_n18) = d9array108(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_n18)
k98(0,_n18) = 0
m98(0,_n18) = 0
l98(0,_n18) = 0
o98(0,_n18) = 0
q98(0,_n18) = 0
p98(0,_n18) = 0
t98(0,_n18) = 0
(_N17(_n18)>=(Size-0))
(_n17<_N17(_n18)) -> ((_n17+0)<Size)
d9array108(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,(_n18+1)) = d9array98(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N17(_n18),_n18)
k108((_n18+1)) = k98(_N17(_n18),_n18)
j108((_n18+1)) = (_N17(_n18)+0)
m108((_n18+1)) = m98(_N17(_n18),_n18)
l108((_n18+1)) = l98(_N17(_n18),_n18)
o108((_n18+1)) = o98(_N17(_n18),_n18)
q108((_n18+1)) = q98(_N17(_n18),_n18)
p108((_n18+1)) = p98(_N17(_n18),_n18)
t108((_n18+1)) = t98(_N17(_n18),_n18)
d9array108(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,0) = d9array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10,_N9)
k108(0) = 0
j108(0) = 0
m108(0) = 0
l108(0) = 0
o108(0) = 0
q108(0) = 0
p108(0) = 0
t108(0) = 0
(_N18>=(Size-0))
(_n18<_N18) -> ((_n18+0)<Size)

4. Assumption :

5. Assertion :
(d9array108(A,(_n18+0),(_n17+0),(_n16+0),(_n15+0),(_n14+0),(_n13+0),(_n12+0),(_n11+0),(_n10+0),_N18)==C)
  

Axiomes Added

d9array74(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N14(_n15,_n16,_n17,_n18),_n15,_n16,_n17,_n18) = C
d9array27(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N6(_n7,_n8,_n9),_n7,_n8,_n9) = C
d9array44(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N8(_n9),_n9) = C
d9array63(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N12(_n13,_n14,_n15,_n16,_n17,_n18),_n13,_n14,_n15,_n16,_n17,_n18) = C
d9array54(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N9) = C
d9array56(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N10(_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18),_n11,_n12,_n13,_n14,_n15,_n16,_n17,_n18) = C
d9array9(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N3(_n4,_n5,_n6,_n7,_n8,_n9),_n4,_n5,_n6,_n7,_n8,_n9) = C
d9array2(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9),_n2,_n3,_n4,_n5,_n6,_n7,_n8,_n9) = C
d9array81(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N15(_n16,_n17,_n18),_n16,_n17,_n18) = C
d9array108(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N18) = C
d9array14(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N4(_n5,_n6,_n7,_n8,_n9),_n5,_n6,_n7,_n8,_n9) = C
d9array89(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N16(_n17,_n18),_n17,_n18) = C
d9array5(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N2(_n3,_n4,_n5,_n6,_n7,_n8,_n9),_n3,_n4,_n5,_n6,_n7,_n8,_n9) = C
d9array59(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N11(_n12,_n13,_n14,_n15,_n16,_n17,_n18),_n12,_n13,_n14,_n15,_n16,_n17,_n18) = C
d9array35(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N7(_n8,_n9),_n8,_n9) = C
d9array20(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N5(_n6,_n7,_n8,_n9),_n6,_n7,_n8,_n9) = C
d9array98(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N17(_n18),_n18) = C
d9array68(A,(_n9+0),(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N13(_n14,_n15,_n16,_n17,_n18),_n14,_n15,_n16,_n17,_n18) = C
VIAP_STANDARD_OUTPUT_True
