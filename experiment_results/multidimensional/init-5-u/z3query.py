import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	m20=Function('m20',IntSort(),IntSort())
	m34=Function('m34',IntSort(),IntSort(),IntSort())
	Size1=Int('Size1')
	_N10=Const('_N10',IntSort())
	_n10=Int('_n10')
	j1=Int('j1')
	_N7=Function('_N7',IntSort(),IntSort(),IntSort(),IntSort())
	d5array22=Function('d5array22',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	m14=Function('m14',IntSort(),IntSort(),IntSort())
	j20=Function('j20',IntSort(),IntSort())
	_x4=Int('_x4')
	_x5=Int('_x5')
	_x6=Int('_x6')
	_n5=Int('_n5')
	_x1=Const('_x1',arraySort)
	_x2=Int('_x2')
	_x3=Int('_x3')
	m5=Function('m5',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	k14=Function('k14',IntSort(),IntSort(),IntSort())
	l14=Function('l14',IntSort(),IntSort(),IntSort())
	m25=Function('m25',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	j40=Function('j40',IntSort(),IntSort())
	A1=Const('A1',arraySort)
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort())
	k1=Int('k1')
	m1=Int('m1')
	_N3=Function('_N3',IntSort(),IntSort(),IntSort())
	d5array34=Function('d5array34',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	C1=Int('C1')
	m9=Function('m9',IntSort(),IntSort(),IntSort(),IntSort())
	d5array14=Function('d5array14',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d5array40=Function('d5array40',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	A=Const('A',arraySort)
	d5array9=Function('d5array9',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	C=Int('C')
	_N9=Function('_N9',IntSort(),IntSort())
	k34=Function('k34',IntSort(),IntSort(),IntSort())
	i1=Int('i1')
	d5array1=Function('d5array1',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d5array2=Function('d5array2',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N6=Function('_N6',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d5array5=Function('d5array5',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort())
	d5array20=Function('d5array20',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	l20=Function('l20',IntSort(),IntSort())
	_n9=Int('_n9')
	d5array=Function('d5array',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	l29=Function('l29',IntSort(),IntSort(),IntSort(),IntSort())
	_N5=Const('_N5',IntSort())
	l34=Function('l34',IntSort(),IntSort(),IntSort())
	_N8=Function('_N8',IntSort(),IntSort(),IntSort())
	_n8=Int('_n8')
	l40=Function('l40',IntSort(),IntSort())
	m29=Function('m29',IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	m40=Function('m40',IntSort(),IntSort())
	_n1=Int('_n1')
	k40=Function('k40',IntSort(),IntSort())
	_n7=Int('_n7')
	_n4=Int('_n4')
	t1=Int('t1')
	t=Int('t')
	d5array29=Function('d5array29',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	l1=Int('l1')
	_n6=Int('_n6')
	d5array25=Function('d5array25',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	l9=Function('l9',IntSort(),IntSort(),IntSort(),IntSort())
	k20=Function('k20',IntSort(),IntSort())
	Size=Int('Size')
	main=Int('main')
	_k1=Int('_k1')
	_k2=Int('_k2')
	_k3=Int('_k3')
	_k4=Int('_k4')
	_k5=Int('_k5')
	_k6=Int('_k6')
	_k8=Int('_k8')
	_k9=Int('_k9')
	_k10=Int('_k10')
	_k7=Int('_k7')
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",50000)
	_s.add(A1 == A)
	_s.add(C1 == C)
	_s.add(t1 == t)
	_s.add(Size1 == Size)
	_s.add(i1 == _N10)
	_s.add(k1 == k40(_N10))
	_s.add(j1 == j40(_N10))
	_s.add(m1 == m40(_N10))
	_s.add(l1 == l40(_N10))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,_x4>=0)))),d5array1(A,_x2,_x3,_x4,_x5,_x6) == d5array40(A,_x2,_x3,_x4,_x5,_x6,_N10))))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array2(A,_n5,_n4,_n3,_n2,_n1,_n1 + 1,_n2,_n3,_n4,_n5) == C)))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5,_n4,_n3,_n2],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,And(_n3>=0,_n2>=0)))))))),d5array2(A,_x2,_x3,_x4,_x5,_x6,0,_n2,_n3,_n4,_n5) == d5array5(A,_x2,_x3,_x4,_x5,_x6,_n2,_n3,_n4,_n5))))
	_s.add(ForAll([_n5,_n4,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n3>=0,_n2>=0))),((_N1(_n2, _n3, _n4, _n5))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n1 < _N1(_n2, _n3, _n4, _n5),And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),((_f(_n1))<(Size)))))
	_s.add(ForAll([_n5,_n4,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n3>=0,_n2>=0))),Or(_N1(_n2, _n3, _n4, _n5)==0,(((_N1(_n2, _n3, _n4, _n5)-1))<(Size))))))
	_s.add(ForAll([_n5,_n4,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n3>=0,_n2>=0))),m5(_n2 + 1, _n3, _n4, _n5) == _N1(_n2, _n3, _n4, _n5))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5,_n4,_n3,_n2],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,And(_n3>=0,_n2>=0)))))))),d5array5(A,_x2,_x3,_x4,_x5,_x6,_n2 + 1,_n3,_n4,_n5) == d5array2(A,_x2,_x3,_x4,_x5,_x6,_N1(_n2,_n3,_n4,_n5),_n2,_n3,_n4,_n5))))
	_s.add(ForAll([_n5,_n4,_n3],m5(0, _n3, _n4, _n5) == 0))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5,_n4,_n3],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,_n3>=0))))))),d5array5(A,_x2,_x3,_x4,_x5,_x6,0,_n3,_n4,_n5) == d5array9(A,_x2,_x3,_x4,_x5,_x6,_n3,_n4,_n5))))
	_s.add(ForAll([_n5,_n4,_n3],Implies(And(_n5>=0,And(_n4>=0,_n3>=0)),((_N2(_n3, _n4, _n5))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n3,_n2],Implies(And(_n2 < _N2(_n3, _n4, _n5),And(_n5>=0,And(_n4>=0,And(_n3>=0,_n2>=0)))),((_f(_n2))<(Size)))))
	_s.add(ForAll([_n5,_n4,_n3],Implies(And(_n5>=0,And(_n4>=0,_n3>=0)),Or(_N2(_n3, _n4, _n5)==0,(((_N2(_n3, _n4, _n5)-1))<(Size))))))
	_s.add(ForAll([_n5,_n4,_n3],Implies(And(_n5>=0,And(_n4>=0,_n3>=0)),m9(_n3 + 1, _n4, _n5) == m5(_N2(_n3, _n4, _n5), _n3, _n4, _n5))))
	_s.add(ForAll([_n5,_n4,_n3],Implies(And(_n5>=0,And(_n4>=0,_n3>=0)),l9(_n3 + 1, _n4, _n5) == _N2(_n3, _n4, _n5))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5,_n4,_n3],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,_n3>=0))))))),d5array9(A,_x2,_x3,_x4,_x5,_x6,_n3 + 1,_n4,_n5) == d5array5(A,_x2,_x3,_x4,_x5,_x6,_N2(_n3,_n4,_n5),_n3,_n4,_n5))))
	_s.add(ForAll([_n5,_n4],m9(0, _n4, _n5) == 0))
	_s.add(ForAll([_n5,_n4],l9(0, _n4, _n5) == 0))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5,_n4],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,_n4>=0)))))),d5array9(A,_x2,_x3,_x4,_x5,_x6,0,_n4,_n5) == d5array14(A,_x2,_x3,_x4,_x5,_x6,_n4,_n5))))
	_s.add(ForAll([_n5,_n4],Implies(And(_n5>=0,_n4>=0),((_N3(_n4, _n5))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n3],Implies(And(_n3 < _N3(_n4, _n5),And(_n5>=0,And(_n4>=0,_n3>=0))),((_f(_n3))<(Size)))))
	_s.add(ForAll([_n5,_n4],Implies(And(_n5>=0,_n4>=0),Or(_N3(_n4, _n5)==0,(((_N3(_n4, _n5)-1))<(Size))))))
	_s.add(ForAll([_n5,_n4],Implies(And(_n5>=0,_n4>=0),k14(_n4 + 1, _n5) == _N3(_n4, _n5))))
	_s.add(ForAll([_n5,_n4],Implies(And(_n5>=0,_n4>=0),m14(_n4 + 1, _n5) == m9(_N3(_n4, _n5), _n4, _n5))))
	_s.add(ForAll([_n5,_n4],Implies(And(_n5>=0,_n4>=0),l14(_n4 + 1, _n5) == l9(_N3(_n4, _n5), _n4, _n5))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5,_n4],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,_n4>=0)))))),d5array14(A,_x2,_x3,_x4,_x5,_x6,_n4 + 1,_n5) == d5array9(A,_x2,_x3,_x4,_x5,_x6,_N3(_n4,_n5),_n4,_n5))))
	_s.add(ForAll([_n5],k14(0, _n5) == 0))
	_s.add(ForAll([_n5],m14(0, _n5) == 0))
	_s.add(ForAll([_n5],l14(0, _n5) == 0))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n5>=0))))),d5array14(A,_x2,_x3,_x4,_x5,_x6,0,_n5) == d5array20(A,_x2,_x3,_x4,_x5,_x6,_n5))))
	_s.add(ForAll([_n5],Implies(_n5>=0,((_N4(_n5))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4],Implies(And(_n4 < _N4(_n5),And(_n5>=0,_n4>=0)),((_f(_n4))<(Size)))))
	_s.add(ForAll([_n5],Implies(_n5>=0,Or(_N4(_n5)==0,(((_N4(_n5)-1))<(Size))))))
	_s.add(ForAll([_n5],Implies(_n5>=0,k20(_n5 + 1) == k14(_N4(_n5), _n5))))
	_s.add(ForAll([_n5],Implies(_n5>=0,j20(_n5 + 1) == _N4(_n5))))
	_s.add(ForAll([_n5],Implies(_n5>=0,m20(_n5 + 1) == m14(_N4(_n5), _n5))))
	_s.add(ForAll([_n5],Implies(_n5>=0,l20(_n5 + 1) == l14(_N4(_n5), _n5))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n5],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n5>=0))))),d5array20(A,_x2,_x3,_x4,_x5,_x6,_n5 + 1) == d5array14(A,_x2,_x3,_x4,_x5,_x6,_N4(_n5),_n5))))
	_s.add(k20(0) == 0)
	_s.add(j20(0) == 0)
	_s.add(m20(0) == 0)
	_s.add(l20(0) == 0)
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,_x4>=0)))),d5array20(A,_x2,_x3,_x4,_x5,_x6,0) == d5array(A,_x2,_x3,_x4,_x5,_x6))))
	_s.add(((_N5)>=(((Size)-(0)))))
	_s.add(ForAll([_n5],Implies(And(_n5 < _N5,_n5>=0),((_f(_n5))<(Size)))))
	_s.add(Or(_N5==0,(((_N5-1))<(Size))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n7,_n6,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n7>=0,And(_n6>=0,And(_n10>=0,And(_n9>=0,_n8>=0))))))))),d5array22(A,_x2,_x3,_x4,_x5,_x6,_n6 + 1,_n7,_n8,_n9,_n10) == d5array22(A,_x2,_x3,_x4,_x5,_x6,_n6,_n7,_n8,_n9,_n10))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n7,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))))))),d5array22(A,_x2,_x3,_x4,_x5,_x6,0,_n7,_n8,_n9,_n10) == d5array25(A,_x2,_x3,_x4,_x5,_x6,_n7,_n8,_n9,_n10))))
	_s.add(ForAll([_n7,_n10,_n9,_n8],Implies(And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0))),((_N6(_n7, _n8, _n9, _n10))>=(((Size)-(0)))))))
	_s.add(ForAll([_n7,_n6,_n9,_n8,_n10],Implies(And(_n6 < _N6(_n7, _n8, _n9, _n10),And(_n7>=0,And(_n6>=0,And(_n9>=0,And(_n8>=0,_n10>=0))))),((_f(_n6))<(Size)))))
	_s.add(ForAll([_n7,_n10,_n9,_n8],Implies(And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0))),Or(_N6(_n7, _n8, _n9, _n10)==0,(((_N6(_n7, _n8, _n9, _n10)-1))<(Size))))))
	_s.add(ForAll([_n7,_n10,_n9,_n8],Implies(And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0))),m25(_n7 + 1, _n8, _n9, _n10) == _N6(_n7, _n8, _n9, _n10))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n7,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))))))),d5array25(A,_x2,_x3,_x4,_x5,_x6,_n7 + 1,_n8,_n9,_n10) == d5array22(A,_x2,_x3,_x4,_x5,_x6,_N6(_n7,_n8,_n9,_n10),_n7,_n8,_n9,_n10))))
	_s.add(ForAll([_n10,_n9,_n8],m25(0, _n8, _n9, _n10) == 0))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n10>=0,And(_n9>=0,_n8>=0))))))),d5array25(A,_x2,_x3,_x4,_x5,_x6,0,_n8,_n9,_n10) == d5array29(A,_x2,_x3,_x4,_x5,_x6,_n8,_n9,_n10))))
	_s.add(ForAll([_n10,_n9,_n8],Implies(And(_n10>=0,And(_n9>=0,_n8>=0)),((_N7(_n8, _n9, _n10))>=(((Size)-(0)))))))
	_s.add(ForAll([_n7,_n10,_n9,_n8],Implies(And(_n7 < _N7(_n8, _n9, _n10),And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))),((_f(_n7))<(Size)))))
	_s.add(ForAll([_n10,_n9,_n8],Implies(And(_n10>=0,And(_n9>=0,_n8>=0)),Or(_N7(_n8, _n9, _n10)==0,(((_N7(_n8, _n9, _n10)-1))<(Size))))))
	_s.add(ForAll([_n10,_n9,_n8],Implies(And(_n10>=0,And(_n9>=0,_n8>=0)),m29(_n8 + 1, _n9, _n10) == m25(_N7(_n8, _n9, _n10), _n8, _n9, _n10))))
	_s.add(ForAll([_n10,_n9,_n8],Implies(And(_n10>=0,And(_n9>=0,_n8>=0)),l29(_n8 + 1, _n9, _n10) == _N7(_n8, _n9, _n10))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n10>=0,And(_n9>=0,_n8>=0))))))),d5array29(A,_x2,_x3,_x4,_x5,_x6,_n8 + 1,_n9,_n10) == d5array25(A,_x2,_x3,_x4,_x5,_x6,_N7(_n8,_n9,_n10),_n8,_n9,_n10))))
	_s.add(ForAll([_n10,_n9],m29(0, _n9, _n10) == 0))
	_s.add(ForAll([_n10,_n9],l29(0, _n9, _n10) == 0))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n10,_n9],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n10>=0,_n9>=0)))))),d5array29(A,_x2,_x3,_x4,_x5,_x6,0,_n9,_n10) == d5array34(A,_x2,_x3,_x4,_x5,_x6,_n9,_n10))))
	_s.add(ForAll([_n10,_n9],Implies(And(_n10>=0,_n9>=0),((_N8(_n9, _n10))>=(((Size)-(0)))))))
	_s.add(ForAll([_n10,_n9,_n8],Implies(And(_n8 < _N8(_n9, _n10),And(_n10>=0,And(_n9>=0,_n8>=0))),((_f(_n8))<(Size)))))
	_s.add(ForAll([_n10,_n9],Implies(And(_n10>=0,_n9>=0),Or(_N8(_n9, _n10)==0,(((_N8(_n9, _n10)-1))<(Size))))))
	_s.add(ForAll([_n10,_n9],Implies(And(_n10>=0,_n9>=0),k34(_n9 + 1, _n10) == _N8(_n9, _n10))))
	_s.add(ForAll([_n10,_n9],Implies(And(_n10>=0,_n9>=0),m34(_n9 + 1, _n10) == m29(_N8(_n9, _n10), _n9, _n10))))
	_s.add(ForAll([_n10,_n9],Implies(And(_n10>=0,_n9>=0),l34(_n9 + 1, _n10) == l29(_N8(_n9, _n10), _n9, _n10))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n10,_n9],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n10>=0,_n9>=0)))))),d5array34(A,_x2,_x3,_x4,_x5,_x6,_n9 + 1,_n10) == d5array29(A,_x2,_x3,_x4,_x5,_x6,_N8(_n9,_n10),_n9,_n10))))
	_s.add(ForAll([_n10],k34(0, _n10) == 0))
	_s.add(ForAll([_n10],m34(0, _n10) == 0))
	_s.add(ForAll([_n10],l34(0, _n10) == 0))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n10],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n10>=0))))),d5array34(A,_x2,_x3,_x4,_x5,_x6,0,_n10) == d5array40(A,_x2,_x3,_x4,_x5,_x6,_n10))))
	_s.add(ForAll([_n10],Implies(_n10>=0,((_N9(_n10))>=(((Size)-(0)))))))
	_s.add(ForAll([_n10,_n9],Implies(And(_n9 < _N9(_n10),And(_n10>=0,_n9>=0)),((_f(_n9))<(Size)))))
	_s.add(ForAll([_n10],Implies(_n10>=0,Or(_N9(_n10)==0,(((_N9(_n10)-1))<(Size))))))
	_s.add(ForAll([_n10],Implies(_n10>=0,k40(_n10 + 1) == k34(_N9(_n10), _n10))))
	_s.add(ForAll([_n10],Implies(_n10>=0,j40(_n10 + 1) == _N9(_n10))))
	_s.add(ForAll([_n10],Implies(_n10>=0,m40(_n10 + 1) == m34(_N9(_n10), _n10))))
	_s.add(ForAll([_n10],Implies(_n10>=0,l40(_n10 + 1) == l34(_N9(_n10), _n10))))
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4,_n10],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n10>=0))))),d5array40(A,_x2,_x3,_x4,_x5,_x6,_n10 + 1) == d5array34(A,_x2,_x3,_x4,_x5,_x6,_N9(_n10),_n10))))
	_s.add(k40(0) == 0)
	_s.add(j40(0) == 0)
	_s.add(m40(0) == 0)
	_s.add(l40(0) == 0)
	_s.add(ForAll([_x3,_x2,_x6,_x5,_x4],Implies(And(_x3>=0,And(_x2>=0,And(_x6>=0,And(_x5>=0,_x4>=0)))),d5array40(A,_x2,_x3,_x4,_x5,_x6,0) == d5array20(A,_x2,_x3,_x4,_x5,_x6,_N5))))
	_s.add(((_N10)>=(((Size)-(0)))))
	_s.add(ForAll([_n10],Implies(And(_n10 < _N10,_n10>=0),((_f(_n10))<(Size)))))
	_s.add(Or(_N10==0,(((_N10-1))<(Size))))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array2(A,_n5,_n4,_n3,_n2,_n1,_N1(_n2,_n3,_n4,_n5),_n2,_n3,_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array20(A,_n5,_n4,_n3,_n2,_n1,_N5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array14(A,_n5,_n4,_n3,_n2,_n1,_N4(_n5),_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array9(A,_n5,_n4,_n3,_n2,_n1,_N3(_n4,_n5),_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array5(A,_n5,_n4,_n3,_n2,_n1,_N2(_n3,_n4,_n5),_n3,_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n7,_n10,_n1,_n3,_n2,_n9,_n8],Implies(And(_n5>=0,And(_n4>=0,And(_n7>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0)))))))),d5array22(A,_n5,_n4,_n3,_n2,_n1,_N6(_n7,_n8,_n9,_n10),_n7,_n8,_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array40(A,_n5,_n4,_n3,_n2,_n1,_N10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d5array34(A,_n5,_n4,_n3,_n2,_n1,_N9(_n10),_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2,_n9],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,_n9>=0)))))),d5array29(A,_n5,_n4,_n3,_n2,_n1,_N8(_n9,_n10),_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2,_n9,_n8],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0))))))),d5array25(A,_n5,_n4,_n3,_n2,_n1,_N7(_n8,_n9,_n10),_n8,_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array2(A,_n5,_n4,_n3,_n2,_n1,_N1(_n2,_n3,_n4,_n5),_n2,_n3,_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array2(A,_n5,_n4,_n3,_n2,_n1,_N1(_n2,_n3,_n4,_n5),_n2,_n3,_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array20(A,_n5,_n4,_n3,_n2,_n1,_N5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array20(A,_n5,_n4,_n3,_n2,_n1,_N5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array14(A,_n5,_n4,_n3,_n2,_n1,_N4(_n5),_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array14(A,_n5,_n4,_n3,_n2,_n1,_N4(_n5),_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array9(A,_n5,_n4,_n3,_n2,_n1,_N3(_n4,_n5),_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array9(A,_n5,_n4,_n3,_n2,_n1,_N3(_n4,_n5),_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array5(A,_n5,_n4,_n3,_n2,_n1,_N2(_n3,_n4,_n5),_n3,_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array5(A,_n5,_n4,_n3,_n2,_n1,_N2(_n3,_n4,_n5),_n3,_n4,_n5) == C)))
	_s.add(ForAll([_n5,_n4,_n7,_n10,_n1,_n3,_n2,_n9,_n8],Implies(And(_n5>=0,And(_n4>=0,And(_n7>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0)))))))),d5array22(A,_n5,_n4,_n3,_n2,_n1,_N6(_n7,_n8,_n9,_n10),_n7,_n8,_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n7,_n10,_n1,_n3,_n2,_n9,_n8],Implies(And(_n5>=0,And(_n4>=0,And(_n7>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0)))))))),d5array22(A,_n5,_n4,_n3,_n2,_n1,_N6(_n7,_n8,_n9,_n10),_n7,_n8,_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array40(A,_n5,_n4,_n3,_n2,_n1,_N10) == C)))
	_s.add(ForAll([_n5,_n4,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))),d5array40(A,_n5,_n4,_n3,_n2,_n1,_N10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d5array34(A,_n5,_n4,_n3,_n2,_n1,_N9(_n10),_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d5array34(A,_n5,_n4,_n3,_n2,_n1,_N9(_n10),_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2,_n9],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,_n9>=0)))))),d5array29(A,_n5,_n4,_n3,_n2,_n1,_N8(_n9,_n10),_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2,_n9],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,_n9>=0)))))),d5array29(A,_n5,_n4,_n3,_n2,_n1,_N8(_n9,_n10),_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2,_n9,_n8],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0))))))),d5array25(A,_n5,_n4,_n3,_n2,_n1,_N7(_n8,_n9,_n10),_n8,_n9,_n10) == C)))
	_s.add(ForAll([_n5,_n4,_n10,_n1,_n3,_n2,_n9,_n8],Implies(And(_n5>=0,And(_n4>=0,And(_n10>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0))))))),d5array25(A,_n5,_n4,_n3,_n2,_n1,_N7(_n8,_n9,_n10),_n8,_n9,_n10) == C)))
	_s.add(A1 == A)
	_s.add(C1 == C)
	_s.add(t1 == t)
	_s.add(Size1 == Size)
	_s.add(_k1>=0)
	_s.add(_k6>=0)
	_s.add(ForAll([_n2 ,_n3 ,_n4 ,_n5],_N1(_n2, _n3, _n4, _n5)>=0))
	_s.add(ForAll([_n3 ,_n4 ,_n5],_N2(_n3, _n4, _n5)>=0))
	_s.add(ForAll([_n4 ,_n5],_N3(_n4, _n5)>=0))
	_s.add(ForAll([_n5],_N4(_n5)>=0))
	_s.add(_N5>=0)
	_s.add(ForAll([_n7 ,_n8 ,_n9 ,_n10],_N6(_n7, _n8, _n9, _n10)>=0))
	_s.add(ForAll([_n8 ,_n9 ,_n10],_N7(_n8, _n9, _n10)>=0))
	_s.add(ForAll([_n9 ,_n10],_N8(_n9, _n10)>=0))
	_s.add(ForAll([_n10],_N9(_n10)>=0))
	_s.add(_N10>=0)
	_s.add(Not(ForAll([_n7,_n10,_n9,_n8,_n6],Implies(And(_n7<_N7(_n8, _n9, _n10),And(_n10<_N10,And(_n9<_N9(_n10),And(_n8<_N8(_n9, _n10),And(_n6<_N6(_n7, _n8, _n9, _n10),And(_n7>=0,And(_n10>=0,And(_n9>=0,And(_n8>=0,_n6>=0))))))))),((d5array40(A,_n10,_n9,_n8,_n7,_n6,_N10))==(C))))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()
