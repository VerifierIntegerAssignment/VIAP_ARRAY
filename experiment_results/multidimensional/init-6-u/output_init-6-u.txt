pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp multidimensional/init-6-u.c
Program Body
{
  int _1_PROVE[1000000][1000000][1000000][1000000][1000000][1000000];
  int i;
  int j;
  int k;
  int l;
  int m;
  int t;
  int Size;
  int A[Size][Size][Size][Size][Size][Size];
  int C;
  i = 0;
  j = 0;
  k = 0;
  l = 0;
  m = 0;
  t = 0;
  while (i < Size)
  {
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    t = 0;
    while (j < Size)
    {
      k = 0;
      l = 0;
      m = 0;
      t = 0;
      while (k < Size)
      {
        l = 0;
        m = 0;
        t = 0;
        while (l < Size)
        {
          m = 0;
          t = 0;
          while (m < Size)
          {
            t = 0;
            while (t < Size)
            {
              A[i][j][k][l][m][t] = C;
              t = t + 1;
            }

            m = m + 1;
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

  i = 0;
  j = 0;
  k = 0;
  l = 0;
  m = 0;
  t = 0;
  while (i < Size)
  {
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    t = 0;
    while (j < Size)
    {
      k = 0;
      l = 0;
      m = 0;
      t = 0;
      while (k < Size)
      {
        l = 0;
        m = 0;
        t = 0;
        while (l < Size)
        {
          m = 0;
          t = 0;
          while (m < Size)
          {
            t = 0;
            while (t < Size)
            {
              _1_PROVE[i][k][j][m][l][t] = A[i][j][k][l][m][t] == C;
              t = t + 1;
            }

            m = m + 1;
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:array C:int j:int i:int k:int _1_PROVE:array m:int l:int t:int Size:int}


Output in normal notation:
1. Frame axioms:
A1 = A
C1 = C
Size1 = Size

2. Output equations:
i1 = (_N12+0)
k1 = k54(_N12)
j1 = j54(_N12)
m1 = m54(_N12)
l1 = l54(_N12)
t1 = t54(_N12)
d6array1(_x1,_x2,_x3,_x4,_x5,_x6,_x7) = d6array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N12)

3. Other axioms:
d6array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n1+1),_n2,_n3,_n4,_n5,_n6) = ite(((_x1=A) and (_x2=(_n6+0)) and (_x3=(_n5+0)) and (_x4=(_n4+0)) and (_x5=(_n3+0)) and (_x6=(_n2+0)) and (_x7=(_n1+0))),C,d6array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n1,_n2,_n3,_n4,_n5,_n6))
d6array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n2,_n3,_n4,_n5,_n6) = d6array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n2,_n3,_n4,_n5,_n6)
(_N1(_n2,_n3,_n4,_n5,_n6)>=(Size-0))
(_n1<_N1(_n2,_n3,_n4,_n5,_n6)) -> ((_n1+0)<Size)
d6array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n2+1),_n3,_n4,_n5,_n6) = d6array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N1(_n2,_n3,_n4,_n5,_n6),_n2,_n3,_n4,_n5,_n6)
t5((_n2+1),_n3,_n4,_n5,_n6) = (_N1(_n2,_n3,_n4,_n5,_n6)+0)
d6array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n3,_n4,_n5,_n6) = d6array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n3,_n4,_n5,_n6)
t5(0,_n3,_n4,_n5,_n6) = 0
(_N2(_n3,_n4,_n5,_n6)>=(Size-0))
(_n2<_N2(_n3,_n4,_n5,_n6)) -> ((_n2+0)<Size)
d6array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n3+1),_n4,_n5,_n6) = d6array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6)
m9((_n3+1),_n4,_n5,_n6) = (_N2(_n3,_n4,_n5,_n6)+0)
t9((_n3+1),_n4,_n5,_n6) = t5(_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6)
d6array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n4,_n5,_n6) = d6array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n4,_n5,_n6)
m9(0,_n4,_n5,_n6) = 0
t9(0,_n4,_n5,_n6) = 0
(_N3(_n4,_n5,_n6)>=(Size-0))
(_n3<_N3(_n4,_n5,_n6)) -> ((_n3+0)<Size)
t14((_n4+1),_n5,_n6) = t9(_N3(_n4,_n5,_n6),_n4,_n5,_n6)
m14((_n4+1),_n5,_n6) = m9(_N3(_n4,_n5,_n6),_n4,_n5,_n6)
d6array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n4+1),_n5,_n6) = d6array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N3(_n4,_n5,_n6),_n4,_n5,_n6)
l14((_n4+1),_n5,_n6) = (_N3(_n4,_n5,_n6)+0)
t14(0,_n5,_n6) = 0
m14(0,_n5,_n6) = 0
d6array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n5,_n6) = d6array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n5,_n6)
l14(0,_n5,_n6) = 0
(_N4(_n5,_n6)>=(Size-0))
(_n4<_N4(_n5,_n6)) -> ((_n4+0)<Size)
k20((_n5+1),_n6) = (_N4(_n5,_n6)+0)
m20((_n5+1),_n6) = m14(_N4(_n5,_n6),_n5,_n6)
l20((_n5+1),_n6) = l14(_N4(_n5,_n6),_n5,_n6)
t20((_n5+1),_n6) = t14(_N4(_n5,_n6),_n5,_n6)
d6array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n5+1),_n6) = d6array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N4(_n5,_n6),_n5,_n6)
k20(0,_n6) = 0
m20(0,_n6) = 0
l20(0,_n6) = 0
t20(0,_n6) = 0
d6array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n6) = d6array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n6)
(_N5(_n6)>=(Size-0))
(_n5<_N5(_n6)) -> ((_n5+0)<Size)
k27((_n6+1)) = k20(_N5(_n6),_n6)
j27((_n6+1)) = (_N5(_n6)+0)
m27((_n6+1)) = m20(_N5(_n6),_n6)
l27((_n6+1)) = l20(_N5(_n6),_n6)
t27((_n6+1)) = t20(_N5(_n6),_n6)
d6array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n6+1)) = d6array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N5(_n6),_n6)
k27(0) = 0
j27(0) = 0
m27(0) = 0
l27(0) = 0
t27(0) = 0
d6array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0) = d6array(_x1,_x2,_x3,_x4,_x5,_x6,_x7)
(_N6>=(Size-0))
(_n6<_N6) -> ((_n6+0)<Size)
d6array29(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n7+1),_n8,_n9,_n10,_n11,_n12) = d6array29(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n7,_n8,_n9,_n10,_n11,_n12)
d6array29(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n8,_n9,_n10,_n11,_n12) = d6array32(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n8,_n9,_n10,_n11,_n12)
(_N7(_n8,_n9,_n10,_n11,_n12)>=(Size-0))
(_n7<_N7(_n8,_n9,_n10,_n11,_n12)) -> ((_n7+0)<Size)
d6array32(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n8+1),_n9,_n10,_n11,_n12) = d6array29(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N7(_n8,_n9,_n10,_n11,_n12),_n8,_n9,_n10,_n11,_n12)
t32((_n8+1),_n9,_n10,_n11,_n12) = (_N7(_n8,_n9,_n10,_n11,_n12)+0)
d6array32(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n9,_n10,_n11,_n12) = d6array36(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n9,_n10,_n11,_n12)
t32(0,_n9,_n10,_n11,_n12) = 0
(_N8(_n9,_n10,_n11,_n12)>=(Size-0))
(_n8<_N8(_n9,_n10,_n11,_n12)) -> ((_n8+0)<Size)
d6array36(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n9+1),_n10,_n11,_n12) = d6array32(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12)
m36((_n9+1),_n10,_n11,_n12) = (_N8(_n9,_n10,_n11,_n12)+0)
t36((_n9+1),_n10,_n11,_n12) = t32(_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12)
d6array36(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n10,_n11,_n12) = d6array41(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n10,_n11,_n12)
m36(0,_n10,_n11,_n12) = 0
t36(0,_n10,_n11,_n12) = 0
(_N9(_n10,_n11,_n12)>=(Size-0))
(_n9<_N9(_n10,_n11,_n12)) -> ((_n9+0)<Size)
t41((_n10+1),_n11,_n12) = t36(_N9(_n10,_n11,_n12),_n10,_n11,_n12)
m41((_n10+1),_n11,_n12) = m36(_N9(_n10,_n11,_n12),_n10,_n11,_n12)
d6array41(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n10+1),_n11,_n12) = d6array36(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N9(_n10,_n11,_n12),_n10,_n11,_n12)
l41((_n10+1),_n11,_n12) = (_N9(_n10,_n11,_n12)+0)
t41(0,_n11,_n12) = 0
m41(0,_n11,_n12) = 0
d6array41(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n11,_n12) = d6array47(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n11,_n12)
l41(0,_n11,_n12) = 0
(_N10(_n11,_n12)>=(Size-0))
(_n10<_N10(_n11,_n12)) -> ((_n10+0)<Size)
k47((_n11+1),_n12) = (_N10(_n11,_n12)+0)
m47((_n11+1),_n12) = m41(_N10(_n11,_n12),_n11,_n12)
l47((_n11+1),_n12) = l41(_N10(_n11,_n12),_n11,_n12)
t47((_n11+1),_n12) = t41(_N10(_n11,_n12),_n11,_n12)
d6array47(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n11+1),_n12) = d6array41(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N10(_n11,_n12),_n11,_n12)
k47(0,_n12) = 0
m47(0,_n12) = 0
l47(0,_n12) = 0
t47(0,_n12) = 0
d6array47(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0,_n12) = d6array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_n12)
(_N11(_n12)>=(Size-0))
(_n11<_N11(_n12)) -> ((_n11+0)<Size)
k54((_n12+1)) = k47(_N11(_n12),_n12)
j54((_n12+1)) = (_N11(_n12)+0)
m54((_n12+1)) = m47(_N11(_n12),_n12)
l54((_n12+1)) = l47(_N11(_n12),_n12)
t54((_n12+1)) = t47(_N11(_n12),_n12)
d6array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,(_n12+1)) = d6array47(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N11(_n12),_n12)
k54(0) = 0
j54(0) = 0
m54(0) = 0
l54(0) = 0
t54(0) = 0
d6array54(_x1,_x2,_x3,_x4,_x5,_x6,_x7,0) = d6array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_N6)
(_N12>=(Size-0))
(_n12<_N12) -> ((_n12+0)<Size)

4. Assumption :

5. Assertion :
(d6array54(A,(_n12+0),(_n11+0),(_n10+0),(_n9+0),(_n8+0),(_n7+0),_N12)==C)

Axiomes Added

d6array9(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N3(_n4,_n5,_n6),_n4,_n5,_n6) = C
d6array29(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N7(_n8,_n9,_n10,_n11,_n12),_n8,_n9,_n10,_n11,_n12) = C
d6array27(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N6) = C
d6array20(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N5(_n6),_n6) = C
d6array47(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N11(_n12),_n12) = C
d6array14(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N4(_n5,_n6),_n5,_n6) = C
d6array5(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6) = C
d6array36(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N9(_n10,_n11,_n12),_n10,_n11,_n12) = C
d6array32(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12) = C
d6array41(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N10(_n11,_n12),_n11,_n12) = C
d6array54(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N12) = C
d6array2(A,(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N1(_n2,_n3,_n4,_n5,_n6),_n2,_n3,_n4,_n5,_n6) = C
VIAP_STANDARD_OUTPUT_True
