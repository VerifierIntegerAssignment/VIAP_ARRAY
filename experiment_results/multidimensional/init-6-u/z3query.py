import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	j54=Function('j54',IntSort(),IntSort())
	_n10=Int('_n10')
	_n11=Int('_n11')
	_n12=Int('_n12')
	_N11=Function('_N11',IntSort(),IntSort())
	d6array36=Function('d6array36',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array32=Function('d6array32',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	m54=Function('m54',IntSort(),IntSort())
	k54=Function('k54',IntSort(),IntSort())
	d6array2=Function('d6array2',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N8=Function('_N8',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n8=Int('_n8')
	d6array27=Function('d6array27',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array20=Function('d6array20',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array=Function('d6array',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array29=Function('d6array29',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array9=Function('d6array9',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	t9=Function('t9',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array5=Function('d6array5',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	t5=Function('t5',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N10=Function('_N10',IntSort(),IntSort(),IntSort())
	m47=Function('m47',IntSort(),IntSort(),IntSort())
	d6array1=Function('d6array1',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	t1=Int('t1')
	_n3=Int('_n3')
	k47=Function('k47',IntSort(),IntSort(),IntSort())
	j1=Int('j1')
	d6array14=Function('d6array14',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	j27=Function('j27',IntSort(),IntSort())
	_N12=Const('_N12',IntSort())
	l14=Function('l14',IntSort(),IntSort(),IntSort(),IntSort())
	m36=Function('m36',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	l1=Int('l1')
	t14=Function('t14',IntSort(),IntSort(),IntSort(),IntSort())
	C=Int('C')
	_N9=Function('_N9',IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N6=Const('_N6',IntSort())
	_N7=Function('_N7',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort())
	_N5=Function('_N5',IntSort(),IntSort())
	l20=Function('l20',IntSort(),IntSort(),IntSort())
	l27=Function('l27',IntSort(),IntSort())
	m27=Function('m27',IntSort(),IntSort())
	m20=Function('m20',IntSort(),IntSort(),IntSort())
	t20=Function('t20',IntSort(),IntSort(),IntSort())
	t27=Function('t27',IntSort(),IntSort())
	Size1=Int('Size1')
	t41=Function('t41',IntSort(),IntSort(),IntSort(),IntSort())
	t47=Function('t47',IntSort(),IntSort(),IntSort())
	m14=Function('m14',IntSort(),IntSort(),IntSort(),IntSort())
	m1=Int('m1')
	t36=Function('t36',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	C1=Int('C1')
	m9=Function('m9',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	m41=Function('m41',IntSort(),IntSort(),IntSort(),IntSort())
	t54=Function('t54',IntSort(),IntSort())
	l41=Function('l41',IntSort(),IntSort(),IntSort(),IntSort())
	_n9=Int('_n9')
	l47=Function('l47',IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	t32=Function('t32',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	_n6=Int('_n6')
	_n7=Int('_n7')
	_n4=Int('_n4')
	_n5=Int('_n5')
	Size=Int('Size')
	_x4=Int('_x4')
	_x5=Int('_x5')
	_x6=Int('_x6')
	_x7=Int('_x7')
	_x1=Const('_x1',arraySort)
	_x2=Int('_x2')
	_x3=Int('_x3')
	d6array54=Function('d6array54',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	l54=Function('l54',IntSort(),IntSort())
	A1=Const('A1',arraySort)
	k1=Int('k1')
	A=Const('A',arraySort)
	i1=Int('i1')
	d6array41=Function('d6array41',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d6array47=Function('d6array47',arraySort,IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	k20=Function('k20',IntSort(),IntSort(),IntSort())
	k27=Function('k27',IntSort(),IntSort())
	main=Int('main')
	_k1=Int('_k1')
	_k2=Int('_k2')
	_k3=Int('_k3')
	_k6=Int('_k6')
	_k4=Int('_k4')
	_k5=Int('_k5')
	_k7=Int('_k7')
	_k8=Int('_k8')
	_k9=Int('_k9')
	_k10=Int('_k10')
	_k11=Int('_k11')
	_k12=Int('_k12')
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",50000)
	_s.add(A1 == A)
	_s.add(C1 == C)
	_s.add(Size1 == Size)
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,_x4>=0))))),d6array1(A,_x2,_x3,_x4,_x5,_x6,_x7) == d6array54(A,_x2,_x3,_x4,_x5,_x6,_x7,_N12))))
	_s.add(i1 == _N12)
	_s.add(k1 == k54(_N12))
	_s.add(j1 == j54(_N12))
	_s.add(m1 == m54(_N12))
	_s.add(l1 == l54(_N12))
	_s.add(t1 == t54(_N12))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array2(A,_n6,_n5,_n4,_n3,_n2,_n1,_n1 + 1,_n2,_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n4,_n6,_n3,_n2],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n3>=0,_n2>=0)))))))))),d6array2(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n2,_n3,_n4,_n5,_n6) == d6array5(A,_x2,_x3,_x4,_x5,_x6,_x7,_n2,_n3,_n4,_n5,_n6))))
	_s.add(ForAll([_n5,_n4,_n6,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n3>=0,_n2>=0)))),((_N1(_n2, _n3, _n4, _n5, _n6))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n1 < _N1(_n2, _n3, _n4, _n5, _n6),And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))),((_f(_n1))<(Size)))))
	_s.add(ForAll([_n5,_n4,_n6,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n3>=0,_n2>=0)))),Or(_N1(_n2, _n3, _n4, _n5, _n6)==0,(((_N1(_n2, _n3, _n4, _n5, _n6)-1))<(Size))))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n4,_n6,_n3,_n2],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n3>=0,_n2>=0)))))))))),d6array5(A,_x2,_x3,_x4,_x5,_x6,_x7,_n2 + 1,_n3,_n4,_n5,_n6) == d6array2(A,_x2,_x3,_x4,_x5,_x6,_x7,_N1(_n2,_n3,_n4,_n5,_n6),_n2,_n3,_n4,_n5,_n6))))
	_s.add(ForAll([_n5,_n4,_n6,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n3>=0,_n2>=0)))),t5(_n2 + 1, _n3, _n4, _n5, _n6) == _N1(_n2, _n3, _n4, _n5, _n6))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n4,_n6,_n3],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0))))))))),d6array5(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n3,_n4,_n5,_n6) == d6array9(A,_x2,_x3,_x4,_x5,_x6,_x7,_n3,_n4,_n5,_n6))))
	_s.add(ForAll([_n5,_n4,_n6,_n3],t5(0, _n3, _n4, _n5, _n6) == 0))
	_s.add(ForAll([_n5,_n4,_n6,_n3],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0))),((_N2(_n3, _n4, _n5, _n6))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n6,_n3,_n2],Implies(And(_n2 < _N2(_n3, _n4, _n5, _n6),And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n3>=0,_n2>=0))))),((_f(_n2))<(Size)))))
	_s.add(ForAll([_n5,_n4,_n6,_n3],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0))),Or(_N2(_n3, _n4, _n5, _n6)==0,(((_N2(_n3, _n4, _n5, _n6)-1))<(Size))))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n4,_n6,_n3],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0))))))))),d6array9(A,_x2,_x3,_x4,_x5,_x6,_x7,_n3 + 1,_n4,_n5,_n6) == d6array5(A,_x2,_x3,_x4,_x5,_x6,_x7,_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6))))
	_s.add(ForAll([_n5,_n4,_n6,_n3],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0))),m9(_n3 + 1, _n4, _n5, _n6) == _N2(_n3, _n4, _n5, _n6))))
	_s.add(ForAll([_n5,_n4,_n6,_n3],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0))),t9(_n3 + 1, _n4, _n5, _n6) == t5(_N2(_n3, _n4, _n5, _n6), _n3, _n4, _n5, _n6))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n4,_n6],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,_n6>=0)))))))),d6array9(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n4,_n5,_n6) == d6array14(A,_x2,_x3,_x4,_x5,_x6,_x7,_n4,_n5,_n6))))
	_s.add(ForAll([_n5,_n4,_n6],m9(0, _n4, _n5, _n6) == 0))
	_s.add(ForAll([_n5,_n4,_n6],t9(0, _n4, _n5, _n6) == 0))
	_s.add(ForAll([_n5,_n4,_n6],Implies(And(_n5>=0,And(_n4>=0,_n6>=0)),((_N3(_n4, _n5, _n6))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n6,_n3],Implies(And(_n3 < _N3(_n4, _n5, _n6),And(_n5>=0,And(_n4>=0,And(_n6>=0,_n3>=0)))),((_f(_n3))<(Size)))))
	_s.add(ForAll([_n5,_n4,_n6],Implies(And(_n5>=0,And(_n4>=0,_n6>=0)),Or(_N3(_n4, _n5, _n6)==0,(((_N3(_n4, _n5, _n6)-1))<(Size))))))
	_s.add(ForAll([_n5,_n4,_n6],Implies(And(_n5>=0,And(_n4>=0,_n6>=0)),t14(_n4 + 1, _n5, _n6) == t9(_N3(_n4, _n5, _n6), _n4, _n5, _n6))))
	_s.add(ForAll([_n5,_n4,_n6],Implies(And(_n5>=0,And(_n4>=0,_n6>=0)),m14(_n4 + 1, _n5, _n6) == m9(_N3(_n4, _n5, _n6), _n4, _n5, _n6))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n4,_n6],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,And(_n4>=0,_n6>=0)))))))),d6array14(A,_x2,_x3,_x4,_x5,_x6,_x7,_n4 + 1,_n5,_n6) == d6array9(A,_x2,_x3,_x4,_x5,_x6,_x7,_N3(_n4,_n5,_n6),_n4,_n5,_n6))))
	_s.add(ForAll([_n5,_n4,_n6],Implies(And(_n5>=0,And(_n4>=0,_n6>=0)),l14(_n4 + 1, _n5, _n6) == _N3(_n4, _n5, _n6))))
	_s.add(ForAll([_n5,_n6],t14(0, _n5, _n6) == 0))
	_s.add(ForAll([_n5,_n6],m14(0, _n5, _n6) == 0))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n6],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,_n6>=0))))))),d6array14(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n5,_n6) == d6array20(A,_x2,_x3,_x4,_x5,_x6,_x7,_n5,_n6))))
	_s.add(ForAll([_n5,_n6],l14(0, _n5, _n6) == 0))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5>=0,_n6>=0),((_N4(_n5, _n6))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n4,_n6],Implies(And(_n4 < _N4(_n5, _n6),And(_n5>=0,And(_n4>=0,_n6>=0))),((_f(_n4))<(Size)))))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5>=0,_n6>=0),Or(_N4(_n5, _n6)==0,(((_N4(_n5, _n6)-1))<(Size))))))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5>=0,_n6>=0),k20(_n5 + 1, _n6) == _N4(_n5, _n6))))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5>=0,_n6>=0),m20(_n5 + 1, _n6) == m14(_N4(_n5, _n6), _n5, _n6))))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5>=0,_n6>=0),l20(_n5 + 1, _n6) == l14(_N4(_n5, _n6), _n5, _n6))))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5>=0,_n6>=0),t20(_n5 + 1, _n6) == t14(_N4(_n5, _n6), _n5, _n6))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n5,_n6],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n5>=0,_n6>=0))))))),d6array20(A,_x2,_x3,_x4,_x5,_x6,_x7,_n5 + 1,_n6) == d6array14(A,_x2,_x3,_x4,_x5,_x6,_x7,_N4(_n5,_n6),_n5,_n6))))
	_s.add(ForAll([_n6],k20(0, _n6) == 0))
	_s.add(ForAll([_n6],m20(0, _n6) == 0))
	_s.add(ForAll([_n6],l20(0, _n6) == 0))
	_s.add(ForAll([_n6],t20(0, _n6) == 0))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n6],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n6>=0)))))),d6array20(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n6) == d6array27(A,_x2,_x3,_x4,_x5,_x6,_x7,_n6))))
	_s.add(ForAll([_n6],Implies(_n6>=0,((_N5(_n6))>=(((Size)-(0)))))))
	_s.add(ForAll([_n5,_n6],Implies(And(_n5 < _N5(_n6),And(_n5>=0,_n6>=0)),((_f(_n5))<(Size)))))
	_s.add(ForAll([_n6],Implies(_n6>=0,Or(_N5(_n6)==0,(((_N5(_n6)-1))<(Size))))))
	_s.add(ForAll([_n6],Implies(_n6>=0,k27(_n6 + 1) == k20(_N5(_n6), _n6))))
	_s.add(ForAll([_n6],Implies(_n6>=0,j27(_n6 + 1) == _N5(_n6))))
	_s.add(ForAll([_n6],Implies(_n6>=0,m27(_n6 + 1) == m20(_N5(_n6), _n6))))
	_s.add(ForAll([_n6],Implies(_n6>=0,l27(_n6 + 1) == l20(_N5(_n6), _n6))))
	_s.add(ForAll([_n6],Implies(_n6>=0,t27(_n6 + 1) == t20(_N5(_n6), _n6))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n6],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n6>=0)))))),d6array27(A,_x2,_x3,_x4,_x5,_x6,_x7,_n6 + 1) == d6array20(A,_x2,_x3,_x4,_x5,_x6,_x7,_N5(_n6),_n6))))
	_s.add(k27(0) == 0)
	_s.add(j27(0) == 0)
	_s.add(m27(0) == 0)
	_s.add(l27(0) == 0)
	_s.add(t27(0) == 0)
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,_x4>=0))))),d6array27(A,_x2,_x3,_x4,_x5,_x6,_x7,0) == d6array(A,_x2,_x3,_x4,_x5,_x6,_x7))))
	_s.add(((_N6)>=(((Size)-(0)))))
	_s.add(ForAll([_n6],Implies(And(_n6 < _N6,_n6>=0),((_f(_n6))<(Size)))))
	_s.add(Or(_N6==0,(((_N6-1))<(Size))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n11,_n12,_n7,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n11>=0,And(_n12>=0,And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0))))))))))),d6array29(A,_x2,_x3,_x4,_x5,_x6,_x7,_n7 + 1,_n8,_n9,_n10,_n11,_n12) == d6array29(A,_x2,_x3,_x4,_x5,_x6,_x7,_n7,_n8,_n9,_n10,_n11,_n12))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))))))))),d6array29(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n8,_n9,_n10,_n11,_n12) == d6array32(A,_x2,_x3,_x4,_x5,_x6,_x7,_n8,_n9,_n10,_n11,_n12))))
	_s.add(ForAll([_n12,_n11,_n10,_n9,_n8],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))),((_N7(_n8, _n9, _n10, _n11, _n12))>=(((Size)-(0)))))))
	_s.add(ForAll([_n11,_n12,_n7,_n10,_n9,_n8],Implies(And(_n7 < _N7(_n8, _n9, _n10, _n11, _n12),And(_n11>=0,And(_n12>=0,And(_n7>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))))),((_f(_n7))<(Size)))))
	_s.add(ForAll([_n12,_n11,_n10,_n9,_n8],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))),Or(_N7(_n8, _n9, _n10, _n11, _n12)==0,(((_N7(_n8, _n9, _n10, _n11, _n12)-1))<(Size))))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11,_n10,_n9,_n8],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))))))))),d6array32(A,_x2,_x3,_x4,_x5,_x6,_x7,_n8 + 1,_n9,_n10,_n11,_n12) == d6array29(A,_x2,_x3,_x4,_x5,_x6,_x7,_N7(_n8,_n9,_n10,_n11,_n12),_n8,_n9,_n10,_n11,_n12))))
	_s.add(ForAll([_n12,_n11,_n10,_n9,_n8],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0)))),t32(_n8 + 1, _n9, _n10, _n11, _n12) == _N7(_n8, _n9, _n10, _n11, _n12))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11,_n10,_n9],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0))))))))),d6array32(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n9,_n10,_n11,_n12) == d6array36(A,_x2,_x3,_x4,_x5,_x6,_x7,_n9,_n10,_n11,_n12))))
	_s.add(ForAll([_n12,_n11,_n10,_n9],t32(0, _n9, _n10, _n11, _n12) == 0))
	_s.add(ForAll([_n12,_n11,_n10,_n9],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0))),((_N8(_n9, _n10, _n11, _n12))>=(((Size)-(0)))))))
	_s.add(ForAll([_n12,_n11,_n10,_n9,_n8],Implies(And(_n8 < _N8(_n9, _n10, _n11, _n12),And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0))))),((_f(_n8))<(Size)))))
	_s.add(ForAll([_n12,_n11,_n10,_n9],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0))),Or(_N8(_n9, _n10, _n11, _n12)==0,(((_N8(_n9, _n10, _n11, _n12)-1))<(Size))))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11,_n10,_n9],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0))))))))),d6array36(A,_x2,_x3,_x4,_x5,_x6,_x7,_n9 + 1,_n10,_n11,_n12) == d6array32(A,_x2,_x3,_x4,_x5,_x6,_x7,_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12))))
	_s.add(ForAll([_n12,_n11,_n10,_n9],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0))),m36(_n9 + 1, _n10, _n11, _n12) == _N8(_n9, _n10, _n11, _n12))))
	_s.add(ForAll([_n12,_n11,_n10,_n9],Implies(And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0))),t36(_n9 + 1, _n10, _n11, _n12) == t32(_N8(_n9, _n10, _n11, _n12), _n9, _n10, _n11, _n12))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11,_n10],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,And(_n11>=0,_n10>=0)))))))),d6array36(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n10,_n11,_n12) == d6array41(A,_x2,_x3,_x4,_x5,_x6,_x7,_n10,_n11,_n12))))
	_s.add(ForAll([_n12,_n11,_n10],m36(0, _n10, _n11, _n12) == 0))
	_s.add(ForAll([_n12,_n11,_n10],t36(0, _n10, _n11, _n12) == 0))
	_s.add(ForAll([_n12,_n11,_n10],Implies(And(_n12>=0,And(_n11>=0,_n10>=0)),((_N9(_n10, _n11, _n12))>=(((Size)-(0)))))))
	_s.add(ForAll([_n12,_n11,_n10,_n9],Implies(And(_n9 < _N9(_n10, _n11, _n12),And(_n12>=0,And(_n11>=0,And(_n10>=0,_n9>=0)))),((_f(_n9))<(Size)))))
	_s.add(ForAll([_n12,_n11,_n10],Implies(And(_n12>=0,And(_n11>=0,_n10>=0)),Or(_N9(_n10, _n11, _n12)==0,(((_N9(_n10, _n11, _n12)-1))<(Size))))))
	_s.add(ForAll([_n12,_n11,_n10],Implies(And(_n12>=0,And(_n11>=0,_n10>=0)),t41(_n10 + 1, _n11, _n12) == t36(_N9(_n10, _n11, _n12), _n10, _n11, _n12))))
	_s.add(ForAll([_n12,_n11,_n10],Implies(And(_n12>=0,And(_n11>=0,_n10>=0)),m41(_n10 + 1, _n11, _n12) == m36(_N9(_n10, _n11, _n12), _n10, _n11, _n12))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11,_n10],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,And(_n11>=0,_n10>=0)))))))),d6array41(A,_x2,_x3,_x4,_x5,_x6,_x7,_n10 + 1,_n11,_n12) == d6array36(A,_x2,_x3,_x4,_x5,_x6,_x7,_N9(_n10,_n11,_n12),_n10,_n11,_n12))))
	_s.add(ForAll([_n12,_n11,_n10],Implies(And(_n12>=0,And(_n11>=0,_n10>=0)),l41(_n10 + 1, _n11, _n12) == _N9(_n10, _n11, _n12))))
	_s.add(ForAll([_n12,_n11],t41(0, _n11, _n12) == 0))
	_s.add(ForAll([_n12,_n11],m41(0, _n11, _n12) == 0))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,_n11>=0))))))),d6array41(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n11,_n12) == d6array47(A,_x2,_x3,_x4,_x5,_x6,_x7,_n11,_n12))))
	_s.add(ForAll([_n12,_n11],l41(0, _n11, _n12) == 0))
	_s.add(ForAll([_n12,_n11],Implies(And(_n12>=0,_n11>=0),((_N10(_n11, _n12))>=(((Size)-(0)))))))
	_s.add(ForAll([_n12,_n11,_n10],Implies(And(_n10 < _N10(_n11, _n12),And(_n12>=0,And(_n11>=0,_n10>=0))),((_f(_n10))<(Size)))))
	_s.add(ForAll([_n12,_n11],Implies(And(_n12>=0,_n11>=0),Or(_N10(_n11, _n12)==0,(((_N10(_n11, _n12)-1))<(Size))))))
	_s.add(ForAll([_n12,_n11],Implies(And(_n12>=0,_n11>=0),k47(_n11 + 1, _n12) == _N10(_n11, _n12))))
	_s.add(ForAll([_n12,_n11],Implies(And(_n12>=0,_n11>=0),m47(_n11 + 1, _n12) == m41(_N10(_n11, _n12), _n11, _n12))))
	_s.add(ForAll([_n12,_n11],Implies(And(_n12>=0,_n11>=0),l47(_n11 + 1, _n12) == l41(_N10(_n11, _n12), _n11, _n12))))
	_s.add(ForAll([_n12,_n11],Implies(And(_n12>=0,_n11>=0),t47(_n11 + 1, _n12) == t41(_N10(_n11, _n12), _n11, _n12))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12,_n11],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,And(_n12>=0,_n11>=0))))))),d6array47(A,_x2,_x3,_x4,_x5,_x6,_x7,_n11 + 1,_n12) == d6array41(A,_x2,_x3,_x4,_x5,_x6,_x7,_N10(_n11,_n12),_n11,_n12))))
	_s.add(ForAll([_n12],k47(0, _n12) == 0))
	_s.add(ForAll([_n12],m47(0, _n12) == 0))
	_s.add(ForAll([_n12],l47(0, _n12) == 0))
	_s.add(ForAll([_n12],t47(0, _n12) == 0))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n12>=0)))))),d6array47(A,_x2,_x3,_x4,_x5,_x6,_x7,0,_n12) == d6array54(A,_x2,_x3,_x4,_x5,_x6,_x7,_n12))))
	_s.add(ForAll([_n12],Implies(_n12>=0,((_N11(_n12))>=(((Size)-(0)))))))
	_s.add(ForAll([_n12,_n11],Implies(And(_n11 < _N11(_n12),And(_n12>=0,_n11>=0)),((_f(_n11))<(Size)))))
	_s.add(ForAll([_n12],Implies(_n12>=0,Or(_N11(_n12)==0,(((_N11(_n12)-1))<(Size))))))
	_s.add(ForAll([_n12],Implies(_n12>=0,k54(_n12 + 1) == k47(_N11(_n12), _n12))))
	_s.add(ForAll([_n12],Implies(_n12>=0,j54(_n12 + 1) == _N11(_n12))))
	_s.add(ForAll([_n12],Implies(_n12>=0,m54(_n12 + 1) == m47(_N11(_n12), _n12))))
	_s.add(ForAll([_n12],Implies(_n12>=0,l54(_n12 + 1) == l47(_N11(_n12), _n12))))
	_s.add(ForAll([_n12],Implies(_n12>=0,t54(_n12 + 1) == t47(_N11(_n12), _n12))))
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4,_n12],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,And(_x4>=0,_n12>=0)))))),d6array54(A,_x2,_x3,_x4,_x5,_x6,_x7,_n12 + 1) == d6array47(A,_x2,_x3,_x4,_x5,_x6,_x7,_N11(_n12),_n12))))
	_s.add(k54(0) == 0)
	_s.add(j54(0) == 0)
	_s.add(m54(0) == 0)
	_s.add(l54(0) == 0)
	_s.add(t54(0) == 0)
	_s.add(ForAll([_x3,_x2,_x7,_x6,_x5,_x4],Implies(And(_x3>=0,And(_x2>=0,And(_x7>=0,And(_x6>=0,And(_x5>=0,_x4>=0))))),d6array54(A,_x2,_x3,_x4,_x5,_x6,_x7,0) == d6array27(A,_x2,_x3,_x4,_x5,_x6,_x7,_N6))))
	_s.add(((_N12)>=(((Size)-(0)))))
	_s.add(ForAll([_n12],Implies(And(_n12 < _N12,_n12>=0),((_f(_n12))<(Size)))))
	_s.add(Or(_N12==0,(((_N12-1))<(Size))))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array2(A,_n6,_n5,_n4,_n3,_n2,_n1,_N1(_n2,_n3,_n4,_n5,_n6),_n2,_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array27(A,_n6,_n5,_n4,_n3,_n2,_n1,_N6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array20(A,_n6,_n5,_n4,_n3,_n2,_n1,_N5(_n6),_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array14(A,_n6,_n5,_n4,_n3,_n2,_n1,_N4(_n5,_n6),_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array9(A,_n6,_n5,_n4,_n3,_n2,_n1,_N3(_n4,_n5,_n6),_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array5(A,_n6,_n5,_n4,_n3,_n2,_n1,_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2,_n9,_n8],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0)))))))))),d6array29(A,_n6,_n5,_n4,_n3,_n2,_n1,_N7(_n8,_n9,_n10,_n11,_n12),_n8,_n9,_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array54(A,_n6,_n5,_n4,_n3,_n2,_n1,_N12) == C)))
	_s.add(ForAll([_n12,_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))),d6array47(A,_n6,_n5,_n4,_n3,_n2,_n1,_N11(_n12),_n12) == C)))
	_s.add(ForAll([_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2],Implies(And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))))),d6array41(A,_n6,_n5,_n4,_n3,_n2,_n1,_N10(_n11,_n12),_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))))),d6array36(A,_n6,_n5,_n4,_n3,_n2,_n1,_N9(_n10,_n11,_n12),_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2,_n9],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,_n9>=0))))))))),d6array32(A,_n6,_n5,_n4,_n3,_n2,_n1,_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array2(A,_n6,_n5,_n4,_n3,_n2,_n1,_N1(_n2,_n3,_n4,_n5,_n6),_n2,_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array2(A,_n6,_n5,_n4,_n3,_n2,_n1,_N1(_n2,_n3,_n4,_n5,_n6),_n2,_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array27(A,_n6,_n5,_n4,_n3,_n2,_n1,_N6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array27(A,_n6,_n5,_n4,_n3,_n2,_n1,_N6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array20(A,_n6,_n5,_n4,_n3,_n2,_n1,_N5(_n6),_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array20(A,_n6,_n5,_n4,_n3,_n2,_n1,_N5(_n6),_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array14(A,_n6,_n5,_n4,_n3,_n2,_n1,_N4(_n5,_n6),_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array14(A,_n6,_n5,_n4,_n3,_n2,_n1,_N4(_n5,_n6),_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array9(A,_n6,_n5,_n4,_n3,_n2,_n1,_N3(_n4,_n5,_n6),_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array9(A,_n6,_n5,_n4,_n3,_n2,_n1,_N3(_n4,_n5,_n6),_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array5(A,_n6,_n5,_n4,_n3,_n2,_n1,_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array5(A,_n6,_n5,_n4,_n3,_n2,_n1,_N2(_n3,_n4,_n5,_n6),_n3,_n4,_n5,_n6) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2,_n9,_n8],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0)))))))))),d6array29(A,_n6,_n5,_n4,_n3,_n2,_n1,_N7(_n8,_n9,_n10,_n11,_n12),_n8,_n9,_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2,_n9,_n8],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,And(_n9>=0,_n8>=0)))))))))),d6array29(A,_n6,_n5,_n4,_n3,_n2,_n1,_N7(_n8,_n9,_n10,_n11,_n12),_n8,_n9,_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array54(A,_n6,_n5,_n4,_n3,_n2,_n1,_N12) == C)))
	_s.add(ForAll([_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))),d6array54(A,_n6,_n5,_n4,_n3,_n2,_n1,_N12) == C)))
	_s.add(ForAll([_n12,_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))),d6array47(A,_n6,_n5,_n4,_n3,_n2,_n1,_N11(_n12),_n12) == C)))
	_s.add(ForAll([_n12,_n5,_n4,_n6,_n1,_n3,_n2],Implies(And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))),d6array47(A,_n6,_n5,_n4,_n3,_n2,_n1,_N11(_n12),_n12) == C)))
	_s.add(ForAll([_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2],Implies(And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))))),d6array41(A,_n6,_n5,_n4,_n3,_n2,_n1,_N10(_n11,_n12),_n11,_n12) == C)))
	_s.add(ForAll([_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2],Implies(And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0))))))),d6array41(A,_n6,_n5,_n4,_n3,_n2,_n1,_N10(_n11,_n12),_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))))),d6array36(A,_n6,_n5,_n4,_n3,_n2,_n1,_N9(_n10,_n11,_n12),_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,_n2>=0)))))))),d6array36(A,_n6,_n5,_n4,_n3,_n2,_n1,_N9(_n10,_n11,_n12),_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2,_n9],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,_n9>=0))))))))),d6array32(A,_n6,_n5,_n4,_n3,_n2,_n1,_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12) == C)))
	_s.add(ForAll([_n10,_n12,_n5,_n4,_n11,_n6,_n1,_n3,_n2,_n9],Implies(And(_n10>=0,And(_n12>=0,And(_n5>=0,And(_n4>=0,And(_n11>=0,And(_n6>=0,And(_n1>=0,And(_n3>=0,And(_n2>=0,_n9>=0))))))))),d6array32(A,_n6,_n5,_n4,_n3,_n2,_n1,_N8(_n9,_n10,_n11,_n12),_n9,_n10,_n11,_n12) == C)))
	_s.add(A1 == A)
	_s.add(C1 == C)
	_s.add(Size1 == Size)
	_s.add(_k1>=0)
	_s.add(_k7>=0)
	_s.add(ForAll([_n2 ,_n3 ,_n4 ,_n5 ,_n6],_N1(_n2, _n3, _n4, _n5, _n6)>=0))
	_s.add(ForAll([_n3 ,_n4 ,_n5 ,_n6],_N2(_n3, _n4, _n5, _n6)>=0))
	_s.add(ForAll([_n4 ,_n5 ,_n6],_N3(_n4, _n5, _n6)>=0))
	_s.add(ForAll([_n5 ,_n6],_N4(_n5, _n6)>=0))
	_s.add(ForAll([_n6],_N5(_n6)>=0))
	_s.add(_N6>=0)
	_s.add(ForAll([_n8 ,_n9 ,_n10 ,_n11 ,_n12],_N7(_n8, _n9, _n10, _n11, _n12)>=0))
	_s.add(ForAll([_n9 ,_n10 ,_n11 ,_n12],_N8(_n9, _n10, _n11, _n12)>=0))
	_s.add(ForAll([_n10 ,_n11 ,_n12],_N9(_n10, _n11, _n12)>=0))
	_s.add(ForAll([_n11 ,_n12],_N10(_n11, _n12)>=0))
	_s.add(ForAll([_n12],_N11(_n12)>=0))
	_s.add(_N12>=0)
	_s.add(Not(ForAll([_n7,_n12,_n11,_n10,_n9,_n8],Implies(And(_n7<_N7(_n8, _n9, _n10, _n11, _n12),And(_n12<_N12,And(_n11<_N11(_n12),And(_n10<_N10(_n11, _n12),And(_n9<_N9(_n10, _n11, _n12),And(_n8<_N8(_n9, _n10, _n11, _n12),And(_n7>=0,And(_n12>=0,And(_n11>=0,And(_n10>=0,And(_n9>=0,_n8>=0))))))))))),((d6array54(A,_n12,_n11,_n10,_n9,_n8,_n7,_N12))==(C))))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()
