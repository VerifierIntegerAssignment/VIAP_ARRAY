pritom@pritom-VirtualBox:~/Downloads/test/viap$ ./viap_tool.py --spec=ReachSafety.prp multidimensional/init-8-u.c
Program Body
{
  int _1_PROVE[1000000][1000000][1000000][1000000][1000000][1000000][1000000][1000000];
  int i;
  int j;
  int k;
  int l;
  int m;
  int t;
  int o;
  int p;
  int Size;
  int A[Size][Size][Size][Size][Size][Size][Size][Size];
  int C;
  i = 0;
  j = 0;
  k = 0;
  l = 0;
  m = 0;
  t = 0;
  o = 0;
  p = 0;
  while (i < Size)
  {
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    t = 0;
    o = 0;
    p = 0;
    while (j < Size)
    {
      k = 0;
      l = 0;
      m = 0;
      t = 0;
      o = 0;
      p = 0;
      while (k < Size)
      {
        l = 0;
        m = 0;
        t = 0;
        o = 0;
        p = 0;
        while (l < Size)
        {
          m = 0;
          t = 0;
          o = 0;
          p = 0;
          while (m < Size)
          {
            t = 0;
            o = 0;
            p = 0;
            while (t < Size)
            {
              o = 0;
              p = 0;
              while (o < Size)
              {
                p = 0;
                while (p < Size)
                {
                  A[i][j][k][l][m][t][o][p] = C;
                  p = p + 1;
                }

                o = o + 1;
              }

              t = t + 1;
            }

            m = m + 1;
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

  i = 0;
  j = 0;
  k = 0;
  l = 0;
  m = 0;
  t = 0;
  o = 0;
  p = 0;
  while (i < Size)
  {
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    t = 0;
    o = 0;
    p = 0;
    while (j < Size)
    {
      k = 0;
      l = 0;
      m = 0;
      t = 0;
      o = 0;
      p = 0;
      while (k < Size)
      {
        l = 0;
        m = 0;
        t = 0;
        o = 0;
        p = 0;
        while (l < Size)
        {
          m = 0;
          t = 0;
          o = 0;
          p = 0;
          while (m < Size)
          {
            t = 0;
            o = 0;
            p = 0;
            while (t < Size)
            {
              o = 0;
              p = 0;
              while (o < Size)
              {
                p = 0;
                while (p < Size)
                {
                  _1_PROVE[i][k][j][m][l][o][p][t] = A[i][j][k][l][m][t][o][p] == C;
                  p = p + 1;
                }

                o = o + 1;
              }

              t = t + 1;
            }

            m = m + 1;
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:array C:int j:int i:int k:int _1_PROVE:array m:int l:int o:int p:int t:int Size:int}


Output in normal notation:
1. Frame axioms:
A1 = A
C1 = C
Size1 = Size

2. Output equations:
i1 = (_N16+0)
k1 = k88(_N16)
j1 = j88(_N16)
m1 = m88(_N16)
l1 = l88(_N16)
o1 = o88(_N16)
p1 = p88(_N16)
t1 = t88(_N16)
d8array1(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9) = d8array88(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N16)

3. Other axioms:
d8array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n1+1),_n2,_n3,_n4,_n5,_n6,_n7,_n8) = ite(((_x1=A) and (_x2=(_n8+0)) and (_x3=(_n7+0)) and (_x4=(_n6+0)) and (_x5=(_n5+0)) and (_x6=(_n4+0)) and (_x7=(_n3+0)) and (_x8=(_n2+0)) and (_x9=(_n1+0))),C,d8array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n1,_n2,_n3,_n4,_n5,_n6,_n7,_n8))
d8array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n2,_n3,_n4,_n5,_n6,_n7,_n8) = d8array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n2,_n3,_n4,_n5,_n6,_n7,_n8)
(_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8)>=(Size-0))
(_n1<_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8)) -> ((_n1+0)<Size)
p5((_n2+1),_n3,_n4,_n5,_n6,_n7,_n8) = (_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8)+0)
d8array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n2+1),_n3,_n4,_n5,_n6,_n7,_n8) = d8array2(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8),_n2,_n3,_n4,_n5,_n6,_n7,_n8)
p5(0,_n3,_n4,_n5,_n6,_n7,_n8) = 0
d8array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n3,_n4,_n5,_n6,_n7,_n8) = d8array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n3,_n4,_n5,_n6,_n7,_n8)
(_N2(_n3,_n4,_n5,_n6,_n7,_n8)>=(Size-0))
(_n2<_N2(_n3,_n4,_n5,_n6,_n7,_n8)) -> ((_n2+0)<Size)
p9((_n3+1),_n4,_n5,_n6,_n7,_n8) = p5(_N2(_n3,_n4,_n5,_n6,_n7,_n8),_n3,_n4,_n5,_n6,_n7,_n8)
d8array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n3+1),_n4,_n5,_n6,_n7,_n8) = d8array5(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N2(_n3,_n4,_n5,_n6,_n7,_n8),_n3,_n4,_n5,_n6,_n7,_n8)
o9((_n3+1),_n4,_n5,_n6,_n7,_n8) = (_N2(_n3,_n4,_n5,_n6,_n7,_n8)+0)
p9(0,_n4,_n5,_n6,_n7,_n8) = 0
d8array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n4,_n5,_n6,_n7,_n8) = d8array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n4,_n5,_n6,_n7,_n8)
o9(0,_n4,_n5,_n6,_n7,_n8) = 0
(_N3(_n4,_n5,_n6,_n7,_n8)>=(Size-0))
(_n3<_N3(_n4,_n5,_n6,_n7,_n8)) -> ((_n3+0)<Size)
p14((_n4+1),_n5,_n6,_n7,_n8) = p9(_N3(_n4,_n5,_n6,_n7,_n8),_n4,_n5,_n6,_n7,_n8)
d8array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n4+1),_n5,_n6,_n7,_n8) = d8array9(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N3(_n4,_n5,_n6,_n7,_n8),_n4,_n5,_n6,_n7,_n8)
o14((_n4+1),_n5,_n6,_n7,_n8) = o9(_N3(_n4,_n5,_n6,_n7,_n8),_n4,_n5,_n6,_n7,_n8)
t14((_n4+1),_n5,_n6,_n7,_n8) = (_N3(_n4,_n5,_n6,_n7,_n8)+0)
p14(0,_n5,_n6,_n7,_n8) = 0
d8array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n5,_n6,_n7,_n8) = d8array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n5,_n6,_n7,_n8)
o14(0,_n5,_n6,_n7,_n8) = 0
t14(0,_n5,_n6,_n7,_n8) = 0
(_N4(_n5,_n6,_n7,_n8)>=(Size-0))
(_n4<_N4(_n5,_n6,_n7,_n8)) -> ((_n4+0)<Size)
m20((_n5+1),_n6,_n7,_n8) = (_N4(_n5,_n6,_n7,_n8)+0)
o20((_n5+1),_n6,_n7,_n8) = o14(_N4(_n5,_n6,_n7,_n8),_n5,_n6,_n7,_n8)
p20((_n5+1),_n6,_n7,_n8) = p14(_N4(_n5,_n6,_n7,_n8),_n5,_n6,_n7,_n8)
t20((_n5+1),_n6,_n7,_n8) = t14(_N4(_n5,_n6,_n7,_n8),_n5,_n6,_n7,_n8)
d8array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n5+1),_n6,_n7,_n8) = d8array14(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N4(_n5,_n6,_n7,_n8),_n5,_n6,_n7,_n8)
m20(0,_n6,_n7,_n8) = 0
o20(0,_n6,_n7,_n8) = 0
p20(0,_n6,_n7,_n8) = 0
t20(0,_n6,_n7,_n8) = 0
d8array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n6,_n7,_n8) = d8array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n6,_n7,_n8)
(_N5(_n6,_n7,_n8)>=(Size-0))
(_n5<_N5(_n6,_n7,_n8)) -> ((_n5+0)<Size)
m27((_n6+1),_n7,_n8) = m20(_N5(_n6,_n7,_n8),_n6,_n7,_n8)
l27((_n6+1),_n7,_n8) = (_N5(_n6,_n7,_n8)+0)
o27((_n6+1),_n7,_n8) = o20(_N5(_n6,_n7,_n8),_n6,_n7,_n8)
p27((_n6+1),_n7,_n8) = p20(_N5(_n6,_n7,_n8),_n6,_n7,_n8)
t27((_n6+1),_n7,_n8) = t20(_N5(_n6,_n7,_n8),_n6,_n7,_n8)
d8array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n6+1),_n7,_n8) = d8array20(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N5(_n6,_n7,_n8),_n6,_n7,_n8)
m27(0,_n7,_n8) = 0
l27(0,_n7,_n8) = 0
o27(0,_n7,_n8) = 0
p27(0,_n7,_n8) = 0
t27(0,_n7,_n8) = 0
d8array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n7,_n8) = d8array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n7,_n8)
(_N6(_n7,_n8)>=(Size-0))
(_n6<_N6(_n7,_n8)) -> ((_n6+0)<Size)
k35((_n7+1),_n8) = (_N6(_n7,_n8)+0)
m35((_n7+1),_n8) = m27(_N6(_n7,_n8),_n7,_n8)
l35((_n7+1),_n8) = l27(_N6(_n7,_n8),_n7,_n8)
o35((_n7+1),_n8) = o27(_N6(_n7,_n8),_n7,_n8)
p35((_n7+1),_n8) = p27(_N6(_n7,_n8),_n7,_n8)
t35((_n7+1),_n8) = t27(_N6(_n7,_n8),_n7,_n8)
d8array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n7+1),_n8) = d8array27(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N6(_n7,_n8),_n7,_n8)
k35(0,_n8) = 0
m35(0,_n8) = 0
l35(0,_n8) = 0
o35(0,_n8) = 0
p35(0,_n8) = 0
t35(0,_n8) = 0
d8array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n8) = d8array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n8)
(_N7(_n8)>=(Size-0))
(_n7<_N7(_n8)) -> ((_n7+0)<Size)
k44((_n8+1)) = k35(_N7(_n8),_n8)
j44((_n8+1)) = (_N7(_n8)+0)
m44((_n8+1)) = m35(_N7(_n8),_n8)
l44((_n8+1)) = l35(_N7(_n8),_n8)
o44((_n8+1)) = o35(_N7(_n8),_n8)
p44((_n8+1)) = p35(_N7(_n8),_n8)
t44((_n8+1)) = t35(_N7(_n8),_n8)
d8array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n8+1)) = d8array35(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N7(_n8),_n8)
k44(0) = 0
j44(0) = 0
m44(0) = 0
l44(0) = 0
o44(0) = 0
p44(0) = 0
t44(0) = 0
d8array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0) = d8array(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9)
(_N8>=(Size-0))
(_n8<_N8) -> ((_n8+0)<Size)
d8array46(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n9+1),_n10,_n11,_n12,_n13,_n14,_n15,_n16) = d8array46(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n9,_n10,_n11,_n12,_n13,_n14,_n15,_n16)
d8array46(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n10,_n11,_n12,_n13,_n14,_n15,_n16) = d8array49(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n10,_n11,_n12,_n13,_n14,_n15,_n16)
(_N9(_n10,_n11,_n12,_n13,_n14,_n15,_n16)>=(Size-0))
(_n9<_N9(_n10,_n11,_n12,_n13,_n14,_n15,_n16)) -> ((_n9+0)<Size)
p49((_n10+1),_n11,_n12,_n13,_n14,_n15,_n16) = (_N9(_n10,_n11,_n12,_n13,_n14,_n15,_n16)+0)
d8array49(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n10+1),_n11,_n12,_n13,_n14,_n15,_n16) = d8array46(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N9(_n10,_n11,_n12,_n13,_n14,_n15,_n16),_n10,_n11,_n12,_n13,_n14,_n15,_n16)
p49(0,_n11,_n12,_n13,_n14,_n15,_n16) = 0
d8array49(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n11,_n12,_n13,_n14,_n15,_n16) = d8array53(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n11,_n12,_n13,_n14,_n15,_n16)
(_N10(_n11,_n12,_n13,_n14,_n15,_n16)>=(Size-0))
(_n10<_N10(_n11,_n12,_n13,_n14,_n15,_n16)) -> ((_n10+0)<Size)
p53((_n11+1),_n12,_n13,_n14,_n15,_n16) = p49(_N10(_n11,_n12,_n13,_n14,_n15,_n16),_n11,_n12,_n13,_n14,_n15,_n16)
d8array53(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n11+1),_n12,_n13,_n14,_n15,_n16) = d8array49(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N10(_n11,_n12,_n13,_n14,_n15,_n16),_n11,_n12,_n13,_n14,_n15,_n16)
o53((_n11+1),_n12,_n13,_n14,_n15,_n16) = (_N10(_n11,_n12,_n13,_n14,_n15,_n16)+0)
p53(0,_n12,_n13,_n14,_n15,_n16) = 0
d8array53(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n12,_n13,_n14,_n15,_n16) = d8array58(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n12,_n13,_n14,_n15,_n16)
o53(0,_n12,_n13,_n14,_n15,_n16) = 0
(_N11(_n12,_n13,_n14,_n15,_n16)>=(Size-0))
(_n11<_N11(_n12,_n13,_n14,_n15,_n16)) -> ((_n11+0)<Size)
p58((_n12+1),_n13,_n14,_n15,_n16) = p53(_N11(_n12,_n13,_n14,_n15,_n16),_n12,_n13,_n14,_n15,_n16)
d8array58(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n12+1),_n13,_n14,_n15,_n16) = d8array53(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N11(_n12,_n13,_n14,_n15,_n16),_n12,_n13,_n14,_n15,_n16)
o58((_n12+1),_n13,_n14,_n15,_n16) = o53(_N11(_n12,_n13,_n14,_n15,_n16),_n12,_n13,_n14,_n15,_n16)
t58((_n12+1),_n13,_n14,_n15,_n16) = (_N11(_n12,_n13,_n14,_n15,_n16)+0)
p58(0,_n13,_n14,_n15,_n16) = 0
d8array58(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n13,_n14,_n15,_n16) = d8array64(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n13,_n14,_n15,_n16)
o58(0,_n13,_n14,_n15,_n16) = 0
t58(0,_n13,_n14,_n15,_n16) = 0
(_N12(_n13,_n14,_n15,_n16)>=(Size-0))
(_n12<_N12(_n13,_n14,_n15,_n16)) -> ((_n12+0)<Size)
m64((_n13+1),_n14,_n15,_n16) = (_N12(_n13,_n14,_n15,_n16)+0)
o64((_n13+1),_n14,_n15,_n16) = o58(_N12(_n13,_n14,_n15,_n16),_n13,_n14,_n15,_n16)
p64((_n13+1),_n14,_n15,_n16) = p58(_N12(_n13,_n14,_n15,_n16),_n13,_n14,_n15,_n16)
t64((_n13+1),_n14,_n15,_n16) = t58(_N12(_n13,_n14,_n15,_n16),_n13,_n14,_n15,_n16)
d8array64(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n13+1),_n14,_n15,_n16) = d8array58(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N12(_n13,_n14,_n15,_n16),_n13,_n14,_n15,_n16)
m64(0,_n14,_n15,_n16) = 0
o64(0,_n14,_n15,_n16) = 0
p64(0,_n14,_n15,_n16) = 0
t64(0,_n14,_n15,_n16) = 0
d8array64(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n14,_n15,_n16) = d8array71(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n14,_n15,_n16)
(_N13(_n14,_n15,_n16)>=(Size-0))
(_n13<_N13(_n14,_n15,_n16)) -> ((_n13+0)<Size)
m71((_n14+1),_n15,_n16) = m64(_N13(_n14,_n15,_n16),_n14,_n15,_n16)
l71((_n14+1),_n15,_n16) = (_N13(_n14,_n15,_n16)+0)
o71((_n14+1),_n15,_n16) = o64(_N13(_n14,_n15,_n16),_n14,_n15,_n16)
p71((_n14+1),_n15,_n16) = p64(_N13(_n14,_n15,_n16),_n14,_n15,_n16)
t71((_n14+1),_n15,_n16) = t64(_N13(_n14,_n15,_n16),_n14,_n15,_n16)
d8array71(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n14+1),_n15,_n16) = d8array64(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N13(_n14,_n15,_n16),_n14,_n15,_n16)
m71(0,_n15,_n16) = 0
l71(0,_n15,_n16) = 0
o71(0,_n15,_n16) = 0
p71(0,_n15,_n16) = 0
t71(0,_n15,_n16) = 0
d8array71(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n15,_n16) = d8array79(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n15,_n16)
(_N14(_n15,_n16)>=(Size-0))
(_n14<_N14(_n15,_n16)) -> ((_n14+0)<Size)
k79((_n15+1),_n16) = (_N14(_n15,_n16)+0)
m79((_n15+1),_n16) = m71(_N14(_n15,_n16),_n15,_n16)
l79((_n15+1),_n16) = l71(_N14(_n15,_n16),_n15,_n16)
o79((_n15+1),_n16) = o71(_N14(_n15,_n16),_n15,_n16)
p79((_n15+1),_n16) = p71(_N14(_n15,_n16),_n15,_n16)
t79((_n15+1),_n16) = t71(_N14(_n15,_n16),_n15,_n16)
d8array79(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n15+1),_n16) = d8array71(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N14(_n15,_n16),_n15,_n16)
k79(0,_n16) = 0
m79(0,_n16) = 0
l79(0,_n16) = 0
o79(0,_n16) = 0
p79(0,_n16) = 0
t79(0,_n16) = 0
d8array79(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0,_n16) = d8array88(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_n16)
(_N15(_n16)>=(Size-0))
(_n15<_N15(_n16)) -> ((_n15+0)<Size)
k88((_n16+1)) = k79(_N15(_n16),_n16)
j88((_n16+1)) = (_N15(_n16)+0)
m88((_n16+1)) = m79(_N15(_n16),_n16)
l88((_n16+1)) = l79(_N15(_n16),_n16)
o88((_n16+1)) = o79(_N15(_n16),_n16)
p88((_n16+1)) = p79(_N15(_n16),_n16)
t88((_n16+1)) = t79(_N15(_n16),_n16)
d8array88(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,(_n16+1)) = d8array79(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N15(_n16),_n16)
k88(0) = 0
j88(0) = 0
m88(0) = 0
l88(0) = 0
o88(0) = 0
p88(0) = 0
t88(0) = 0
d8array88(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,0) = d8array44(_x1,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_N8)
(_N16>=(Size-0))
(_n16<_N16) -> ((_n16+0)<Size)

4. Assumption :

5. Assertion :
(d8array88(A,(_n16+0),(_n15+0),(_n14+0),(_n13+0),(_n12+0),(_n11+0),(_n10+0),(_n9+0),_N16)==C)


Axiomes Added

d8array5(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N2(_n3,_n4,_n5,_n6,_n7,_n8),_n3,_n4,_n5,_n6,_n7,_n8) = C
d8array64(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N13(_n14,_n15,_n16),_n14,_n15,_n16) = C
d8array2(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N1(_n2,_n3,_n4,_n5,_n6,_n7,_n8),_n2,_n3,_n4,_n5,_n6,_n7,_n8) = C
d8array58(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N12(_n13,_n14,_n15,_n16),_n13,_n14,_n15,_n16) = C
d8array44(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N8) = C
d8array53(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N11(_n12,_n13,_n14,_n15,_n16),_n12,_n13,_n14,_n15,_n16) = C
d8array71(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N14(_n15,_n16),_n15,_n16) = C
d8array14(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N4(_n5,_n6,_n7,_n8),_n5,_n6,_n7,_n8) = C
d8array88(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N16) = C
d8array49(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N10(_n11,_n12,_n13,_n14,_n15,_n16),_n11,_n12,_n13,_n14,_n15,_n16) = C
d8array46(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N9(_n10,_n11,_n12,_n13,_n14,_n15,_n16),_n10,_n11,_n12,_n13,_n14,_n15,_n16) = C
d8array35(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N7(_n8),_n8) = C
d8array20(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N5(_n6,_n7,_n8),_n6,_n7,_n8) = C
d8array79(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N15(_n16),_n16) = C
d8array9(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N3(_n4,_n5,_n6,_n7,_n8),_n4,_n5,_n6,_n7,_n8) = C
d8array27(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),(_n4+0),(_n3+0),(_n2+0),(_n1+0),_N6(_n7,_n8),_n7,_n8) = C
VIAP_STANDARD_OUTPUT_True
